let _lunrWorkerCode="\n\n// The lunr.js code will be inserted here.\n\nonmessage = (message) => {\n    if (!message.data.query) {\n        throw new Error('No search query provided.');\n    }\n    if (!message.data.indexJSONData) {\n        throw new Error('No index data provided.');\n    }\n    if (!message.data.defaultFields) {\n        throw new Error('No default fields provided.');\n    }\n    // Create index\n    let index = lunr.Index.load(message.data.indexJSONData);\n    \n    // Declare query function building \n    function _queryfn(_query){ // _query is the Query object\n        // Edit the parsed query clauses that are applicable for all fields (default) in order\n        // to remove the field 'kind' from the clause since this it's only useful when specifically requested.\n        var parser = new lunr.QueryParser(message.data.query, _query)\n        parser.parse()\n        _query.clauses.forEach(clause => {\n            if (clause.fields == _query.allFields){\n                // we change the query fields when they are applicable to all fields\n                // to a list of predefined fields because we might include additional filters (like kind:)\n                // which should not be matched by default.\n                clause.fields = message.data.defaultFields;\n            }\n            // TODO: If fuzzy match is greater than 20 throw an error.\n        });\n    }\n\n    // Launch the search\n    let results = index.query(_queryfn)\n    \n    // Post message with results\n    postMessage({'results':results});\n};\n";function _makeWorkerSmart(e){var t=new Worker(e);return t.terminated=!1,t.postMessageCount=0,t.postMessage=function(){return this.postMessageCount=this.postMessageCount+1,Worker.prototype.postMessage.apply(this,arguments)},t.terminate=function(){if(!0!==this.terminated)return this.terminated=!0,Worker.prototype.terminate.apply(this,arguments)},t.restart=function(){return this.terminate(),_makeWorkerSmart(e)},t}var _searchWorker=null;let searchEventsEnv=document.implementation.createHTMLDocument('This is a document to popagate search related events, we avoid using "document" for performance reasons.');function abortSearch(){searchEventsEnv.dispatchEvent(new CustomEvent("abortSearch",{}))}function restartSearchWorker(){var e=_searchWorker;null!=e&&e.postMessageCount>0&&(e=e.restart()),_searchWorker=e}function _getWorkerPromise(e){return new Promise(((t,r)=>{if(null===_searchWorker){let t=new Blob([e+_lunrWorkerCode],{type:"text/javascript"}),r=window.URL.createObjectURL(t);_searchWorker=_makeWorkerSmart(r)}else restartSearchWorker();t(_searchWorker)}))}function lunrSearch(e,t,r,n,a){abortSearch();var s=!1;return searchEventsEnv.addEventListener("abortSearch",(e=>{s=!0,searchEventsEnv.removeEventListener("abortSearch",this)})),new Promise(((o,i)=>{setTimeout((()=>{o(_getIndexDataPromise(t).then((t=>httpGetPromise(n).then((n=>_getWorkerPromise(n).then((n=>{let a=new Promise(((e,t)=>{n.onmessage=r=>{r.data.results?(console.log("Got result from worker:"),console.dir(r.data.results),e(r.data.results)):t("No data received from worker")},n.onerror=function(e){t(e)}})),o={query:e,indexJSONData:t,defaultFields:r};return s||(console.log(`Posting query "${e}" to worker:`),console.dir(o),n.postMessage(o),searchEventsEnv.dispatchEvent(new CustomEvent("searchStarted",{query:e}))),a})))))))}),a)}))}function fetchResultsData(e,t){return _getAllDocumentsPromise(t).then((t=>_asyncFor(e,(e=>{var r=t.getElementById(e.ref);if(!r)throw new Error("Cannot find document ID: "+e.ref);return r}))))}function buildSearchResult(e){var t=document.createElement("tr"),r=document.createElement("td"),n=document.createElement("td"),a=document.createElement("article"),s=document.createElement("header"),o=document.createElement("section"),i=document.createElement("code"),l=document.createElement("a"),c=document.createElement("p");c.innerHTML=e.querySelector(".summary").innerHTML,l.setAttribute("href",e.querySelector(".url").innerHTML),l.setAttribute("class","internal-link"),l.innerHTML=e.querySelector(".fullName").innerHTML;let u=e.querySelector(".kind").innerHTML;e.querySelector(".type").innerHTML.endsWith("Function")&&(l.innerHTML=l.innerHTML+"()"),r.innerHTML=u,t.appendChild(r),t.appendChild(n),n.appendChild(a),a.appendChild(s),a.appendChild(o),s.appendChild(i),i.appendChild(l),o.appendChild(c);let d=e.querySelector(".kind").innerHTML.toLowerCase().replace(" ","");return r.setAttribute("class",d),e.querySelector(".privacy").innerHTML.includes("PRIVATE")&&t.setAttribute("class","private"),t}function _asyncFor(e,t){return new Promise(((r,n)=>{let a=[];e.forEach((e=>{a.push(new Promise(((r,n)=>{setTimeout((()=>{try{r(t(e))}catch(a){n(a)}}),0)})))})),Promise.all(a).then((e=>{r(e)})).catch((e=>{n(e)}))}))}var _indexDataCache={};function _getIndexDataPromise(e){return _indexDataCache[e]?new Promise(((t,r)=>{t(_indexDataCache[e])})):httpGetPromise(e).then((t=>(_indexDataCache[e]=JSON.parse(t),_indexDataCache[e])))}var _allDocumentsCache={};function _getAllDocumentsPromise(e){return _allDocumentsCache[e]?new Promise(((t,r)=>{t(_allDocumentsCache[e])})):httpGetPromise(e).then((t=>{let r=new self.DOMParser;return _allDocumentsCache[e]=r.parseFromString(t,"text/html"),_allDocumentsCache[e]}))}