"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[84274],{15680:(e,n,a)=>{a.d(n,{xA:()=>p,yg:()=>g});var r=a(96540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var c=r.createContext({}),l=function(e){var n=r.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(a),m=t,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return a?r.createElement(g,s(s({ref:n},p),{},{components:a})):r.createElement(g,s({ref:n},p))}));function g(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:t,s[1]=i;for(var l=2;l<o;l++)s[l]=a[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},53317:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=a(58168),t=(a(96540),a(15680));const o={id:"reference-terminology",title:"Pulsar Terminology",sidebar_label:"Terminology",description:"Get a comprehensive understanding of Pulsar terminologies."},s=void 0,i={unversionedId:"reference-terminology",id:"version-4.0.x/reference-terminology",title:"Pulsar Terminology",description:"Get a comprehensive understanding of Pulsar terminologies.",source:"@site/versioned_docs/version-4.0.x/reference-terminology.md",sourceDirName:".",slug:"/reference-terminology",permalink:"/docs/4.0.x/reference-terminology",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-4.0.x/reference-terminology.md",tags:[],version:"4.0.x",frontMatter:{id:"reference-terminology",title:"Pulsar Terminology",sidebar_label:"Terminology",description:"Get a comprehensive understanding of Pulsar terminologies."},sidebar:"docsSidebar",previous:{title:"REST APIs",permalink:"/docs/4.0.x/reference-rest-api-overview"},next:{title:"Pulsar CLI tools",permalink:"/docs/4.0.x/reference-cli-tools"}},c={},l=[{value:"Concepts",id:"concepts",level:2},{value:"Pulsar",id:"pulsar",level:3},{value:"Namespace Bundle",id:"namespace-bundle",level:3},{value:"Namespace",id:"namespace",level:3},{value:"Pub-Sub",id:"pub-sub",level:3},{value:"Reader",id:"reader",level:3},{value:"Cursor",id:"cursor",level:3},{value:"Unacknowledged",id:"unacknowledged",level:3},{value:"Retention Policy",id:"retention-policy",level:3},{value:"Multi-Tenancy",id:"multi-tenancy",level:3},{value:"Failure Domain",id:"failure-domain",level:3},{value:"Anti-Affinity Namespaces",id:"anti-affinity-namespaces",level:3},{value:"Architecture",id:"architecture",level:2},{value:"Standalone",id:"standalone",level:3},{value:"Topic Lookup",id:"topic-lookup",level:3},{value:"Dispatcher",id:"dispatcher",level:3},{value:"Broker",id:"broker",level:3},{value:"Storage",id:"storage",level:2},{value:"Bookie",id:"bookie",level:3}],p={toc:l},u="wrapper";function d(e){let{components:n,...a}=e;return(0,t.yg)(u,(0,r.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"Here is a glossary of terms related to Apache Pulsar:"),(0,t.yg)("h2",{id:"concepts"},"Concepts"),(0,t.yg)("h3",{id:"pulsar"},"Pulsar"),(0,t.yg)("p",null,"Pulsar is a distributed messaging system originally created by Yahoo but now under the stewardship of the Apache Software Foundation."),(0,t.yg)("h3",{id:"namespace-bundle"},"Namespace Bundle"),(0,t.yg)("p",null,"Namespace bundle is a virtual group of ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-messaging#topics"},"topics")," that belong to the same ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-multi-tenancy#namespaces"},"namespace"),". A namespace bundle\nis defined as a range between two 32-bit hashes, such as 0x00000000 and 0xffffffff."),(0,t.yg)("h3",{id:"namespace"},"Namespace"),(0,t.yg)("p",null,"Namespace is a virtual grouping of ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-messaging#topics"},"topics"),", under a specific\n",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-multi-tenancy#tenants"},"tenant"),". A namespace is defined\nby a string name, such as ",(0,t.yg)("inlineCode",{parentName:"p"},"my-tenant/my-namespace"),"."),(0,t.yg)("h3",{id:"pub-sub"},"Pub-Sub"),(0,t.yg)("p",null,"Pub-sub is a messaging pattern in which ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-clients#producer"},"producer")," processes publish messages on ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-messaging#topics"},"topics")," that\nare then consumed (processed) by ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-clients#consumer"},"consumer")," processes."),(0,t.yg)("h3",{id:"reader"},"Reader"),(0,t.yg)("p",null,"Pulsar readers are message processors much like Pulsar ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-clients#consumer"},"consumers")," but with two crucial differences:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"you can specify ",(0,t.yg)("em",{parentName:"li"},"where")," on a topic readers begin processing messages (consumers always begin with the latest\navailable unacked message);"),(0,t.yg)("li",{parentName:"ul"},"readers don't retain data or acknowledge messages.")),(0,t.yg)("h3",{id:"cursor"},"Cursor"),(0,t.yg)("p",null,"Cursor is the subscription position for a ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-clients#consumer"},"consumer"),"."),(0,t.yg)("h3",{id:"unacknowledged"},"Unacknowledged"),(0,t.yg)("p",null,"Unacknowledged means a message that has been delivered to a consumer for processing but not yet confirmed as processed by the consumer."),(0,t.yg)("h3",{id:"retention-policy"},"Retention Policy"),(0,t.yg)("p",null,"Retention policy is the size and time limits that you can set on a ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-multi-tenancy#namespaces"},"namespace")," to configure retention of ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-messaging#messages"},"messages"),"\nthat have already been ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-messaging#acknowledgment"},"acknowledged"),"."),(0,t.yg)("h3",{id:"multi-tenancy"},"Multi-Tenancy"),(0,t.yg)("p",null,"Multi-tenancy is the ability to isolate ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-multi-tenancy#namespaces"},"namespaces"),", specify quotas, and configure authentication and authorization\non a per-",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-multi-tenancy#tenants"},"tenant")," basis."),(0,t.yg)("h3",{id:"failure-domain"},"Failure Domain"),(0,t.yg)("p",null,"Failure domain is a logical domain under a Pulsar cluster. Each logical domain contains a pre-configured list of brokers."),(0,t.yg)("h3",{id:"anti-affinity-namespaces"},"Anti-Affinity Namespaces"),(0,t.yg)("p",null,"Anti-affinity namespaces are a group of namespaces that have anti-affinity to each other."),(0,t.yg)("h2",{id:"architecture"},"Architecture"),(0,t.yg)("h3",{id:"standalone"},"Standalone"),(0,t.yg)("p",null,"Standalone is a lightweight Pulsar broker in which all components run in a single Java Virtual Machine (JVM) process. Standalone\nclusters can be run on a single machine and are useful for development purposes."),(0,t.yg)("h3",{id:"topic-lookup"},"Topic Lookup"),(0,t.yg)("p",null,"Topic lookup is a service provided by Pulsar ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-architecture-overview#brokers"},"brokers")," that enables connecting clients to automatically determine\nwhich Pulsar ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-architecture-overview#clusters"},"cluster")," is responsible for a ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-messaging#topics"},"topic")," (and thus where message traffic for\nthe topic needs to be routed)."),(0,t.yg)("h3",{id:"dispatcher"},"Dispatcher"),(0,t.yg)("p",null,"Dispatcher is an asynchronous TCP server used for all data transfers in and out of a Pulsar ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-architecture-overview#brokers"},"broker"),". The Pulsar\ndispatcher uses a custom binary protocol for all communications."),(0,t.yg)("h3",{id:"broker"},"Broker"),(0,t.yg)("p",null,"Broker is a Pulsar server that receives, acknowledges, and delivers messages to consumers.\nA Pulsar cluster can have one or more brokers."),(0,t.yg)("h2",{id:"storage"},"Storage"),(0,t.yg)("h3",{id:"bookie"},"Bookie"),(0,t.yg)("p",null,"Bookie is the name of an individual BookKeeper server. It is effectively the storage server of Pulsar."))}d.isMDXComponent=!0}}]);