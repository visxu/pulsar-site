"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[41290],{15680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>u});var r=n(96540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=r.createContext({}),d=function(e){var a=r.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=d(e.components);return r.createElement(s.Provider,{value:a},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},g=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(n),g=t,u=p["".concat(s,".").concat(g)]||p[g]||b[g]||l;return n?r.createElement(u,o(o({ref:a},c),{},{components:n})):r.createElement(u,o({ref:a},c))}));function u(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var l=n.length,o=new Array(l);o[0]=g;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[p]="string"==typeof e?e:t,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},26658:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>b,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=n(58168),t=(n(96540),n(15680));const l={id:"concepts-broker-load-balancing-types",title:"Types",sidebar_label:"Types"},o=void 0,i={unversionedId:"concepts-broker-load-balancing-types",id:"version-4.0.x/concepts-broker-load-balancing-types",title:"Types",description:"Pulsar provides three types of broker load balancers:",source:"@site/versioned_docs/version-4.0.x/concepts-broker-load-balancing-types.md",sourceDirName:".",slug:"/concepts-broker-load-balancing-types",permalink:"/docs/4.0.x/concepts-broker-load-balancing-types",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-4.0.x/concepts-broker-load-balancing-types.md",tags:[],version:"4.0.x",frontMatter:{id:"concepts-broker-load-balancing-types",title:"Types",sidebar_label:"Types"},sidebar:"docsSidebar",previous:{title:"Concepts",permalink:"/docs/4.0.x/concepts-broker-load-balancing-concepts"},next:{title:"Quick start",permalink:"/docs/4.0.x/concepts-broker-load-balancing-quick-start"}},s={},d=[{value:"Side-by-side comparisons",id:"side-by-side-comparisons",level:2},{value:"Related topics",id:"related-topics",level:2}],c={toc:d},p="wrapper";function b(e){let{components:a,...n}=e;return(0,t.yg)(p,(0,r.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"Pulsar provides three types of broker load balancers:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Simple broker load balancer: it existed since Pulsar's inception, but now is deprecated.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("a",{parentName:"p",href:"#side-by-side-comparisons"},"Modular broker load balancer"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("a",{parentName:"p",href:"#side-by-side-comparisons"},"Extensible broker load balancer")))),(0,t.yg)("p",null,"The modular and extensible broker load balancer implements similar load balance functionalities with different system designs. For example, they both employ a similar approach to distributing data loads among brokers, including:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Dynamic ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-concepts#bundle-assignment"},"bundle-broker assignment"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Dynamic ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-concepts#bundle-splitting"},"bundle splitting"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Dynamic ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-concepts#bundle-unloading"},"bundle unloading (shedding)")))),(0,t.yg)("p",null,"However, for bundle ownership and load data stores, the modular load balancer uses ZooKeeper, whereas the extensible load balancer uses ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-messaging#system-topic"},"System topics")," and ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-clients#tableview"},"Table views"),"."),(0,t.yg)("h2",{id:"side-by-side-comparisons"},"Side-by-side comparisons"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Dimension"),(0,t.yg)("th",{parentName:"tr",align:null},"Modular broker load balancer"),(0,t.yg)("th",{parentName:"tr",align:null},"Extensible broker load balancer"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Available version"),(0,t.yg)("td",{parentName:"tr",align:null},"Pulsar 1.7.0 ",(0,t.yg)("br",null)," ",(0,t.yg)("br",null),"2017"),(0,t.yg)("td",{parentName:"tr",align:null},"Pulsar 3.0.0 ",(0,t.yg)("br",null)," ",(0,t.yg)("br",null),"2023")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Load Balance Metadata Store and Replication"),(0,t.yg)("td",{parentName:"tr",align:null},"Dependent on ZooKeeper for load balance metadata store and replication.",(0,t.yg)("br",null)," ",(0,t.yg)("br",null)," - All broker load data and all bundle load data are stored in ZooKeeper and replicated to all brokers via ZooKeeper watchers. ",(0,t.yg)("br",null),(0,t.yg)("br",null),"- All bundle ownerships are stored in ZooKeeper as ephemeral locks."),(0,t.yg)("td",{parentName:"tr",align:null},"Dependent on system topics and table views for load balance metadata store and replication. ",(0,t.yg)("br",null)," ",(0,t.yg)("br",null)," - All broker load data are stored in a non-persistent system topic and replicated to all brokers via table views. ",(0,t.yg)("br",null)," ",(0,t.yg)("br",null),"- Each broker publishes only top k bundles' load data in a non-persistent system topic, and only the leader broker consumes it via a table view. ",(0,t.yg)("br",null)," ",(0,t.yg)("br",null)," - Bundle ownerships are stored in a persistent system topic and replicated to all brokers via table views.",(0,t.yg)("br",null)," ",(0,t.yg)("br",null)," Note: The absolute size of the replicated load data and the complexity of the replication decreased due to passing the data through memory-only, non-persistent topics.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Load Balance Decision",(0,t.yg)("br",null),"(Load Balance leader dependency)"),(0,t.yg)("td",{parentName:"tr",align:null},"Single leader broker decides on bundle-broker assignment, bundle splitting, and bundle unloading. ",(0,t.yg)("br",null)," ",(0,t.yg)("br",null)," Note: The leader broker requires global load information"),(0,t.yg)("td",{parentName:"tr",align:null},"Each broker decides and runs bundle-broker assignment (lookup) and bundle splitting based on the local (replicated) information. ",(0,t.yg)("br",null),(0,t.yg)("br",null)," The leader broker still decides on bundle unloading globally.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Pub/sub reconnection upon bundle unloading"),(0,t.yg)("td",{parentName:"tr",align:null},"When bundles are unloaded, the topics in the bundles are temporarily closed, and producers and consumers connect to new owner brokers. ",(0,t.yg)("br",null)," ",(0,t.yg)("br",null)," - Connecting to the new owner brokers involves redirecting lookup requests via the leader broker."),(0,t.yg)("td",{parentName:"tr",align:null},"Any broker can respond to the lookup requests to locate the new owner brokers without asking the leader broker. The reconnection does not go through the leader broker.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Observability"),(0,t.yg)("td",{parentName:"tr",align:null},"You can monitor and analyze load balance with various ",(0,t.yg)("a",{parentName:"td",href:"/docs/4.0.x/reference-metrics"},"metrics")),(0,t.yg)("td",{parentName:"tr",align:null},"It adds additional ",(0,t.yg)("a",{parentName:"td",href:"/docs/4.0.x/reference-metrics"},"metrics")," and debug mode. For example: ",(0,t.yg)("br",null),(0,t.yg)("br",null)," - Check the status of load balance decision breakdown and failure. ",(0,t.yg)("br",null),(0,t.yg)("br",null)," - Use the dynamic debug mode configuration to dynamically turn on and off more load balance decision logs.")))),(0,t.yg)("h2",{id:"related-topics"},"Related topics"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"To get a comprehensive understanding and discover the key insights, see ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-overview"},"Broker load balancing | Overview"),".")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"To discover different usage scenarios, see ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-use-cases"},"Broker load balancing | Use cases"),".")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"To explore functionalities, see ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-features"},"Broker load balancing | Features"),".")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"To understand advantages, see ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-benefits"},"Broker load balancing | Benefits"),".")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"To learn essential fundamentals, see ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-concepts"},"Broker load balancing | Concepts"),".")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"To get up quickly, see ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-quick-start"},"Broker load balancing | Quick start"),".")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"To migrate one broker load balancer type to another, see ",(0,t.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-broker-load-balancing-migration"},"Broker load balancing | Migration"),"."))))}b.isMDXComponent=!0}}]);