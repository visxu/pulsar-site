"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[43637],{21250:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var s=i(74848),r=i(28453);const l={id:"reference-metrics-opentelemetry",title:"Pulsar OpenTelemetry Metrics",sidebar_label:"OpenTelemetry Metrics"},c=void 0,o={id:"reference-metrics-opentelemetry",title:"Pulsar OpenTelemetry Metrics",description:"Pulsar exposes the following OpenTelemetry metrics.",source:"@site/versioned_docs/version-4.0.x/reference-metrics-opentelemetry.md",sourceDirName:".",slug:"/reference-metrics-opentelemetry",permalink:"/docs/4.0.x/reference-metrics-opentelemetry",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-4.0.x/reference-metrics-opentelemetry.md",tags:[],version:"4.0.x",frontMatter:{id:"reference-metrics-opentelemetry",title:"Pulsar OpenTelemetry Metrics",sidebar_label:"OpenTelemetry Metrics"},sidebar:"docsSidebar",previous:{title:"Monitoring",permalink:"/docs/4.0.x/deploy-monitoring"},next:{title:"Overview",permalink:"/docs/4.0.x/security-overview"}},t={},d=[{value:"Broker",id:"broker",level:2},{value:"Connection Metrics",id:"connection-metrics",level:3},{value:"pulsar.broker.connection.count",id:"pulsarbrokerconnectioncount",level:4},{value:"pulsar.broker.connection.create.operation.count",id:"pulsarbrokerconnectioncreateoperationcount",level:4},{value:"pulsar.broker.connection.rate_limit.count",id:"pulsarbrokerconnectionrate_limitcount",level:4},{value:"Topic Messaging metrics",id:"topic-messaging-metrics",level:3},{value:"pulsar.broker.topic.subscription.count",id:"pulsarbrokertopicsubscriptioncount",level:4},{value:"pulsar.broker.topic.producer.count",id:"pulsarbrokertopicproducercount",level:4},{value:"pulsar.broker.topic.consumer.count",id:"pulsarbrokertopicconsumercount",level:4},{value:"pulsar.broker.topic.message.incoming.count",id:"pulsarbrokertopicmessageincomingcount",level:4},{value:"pulsar.broker.topic.message.outgoing.count",id:"pulsarbrokertopicmessageoutgoingcount",level:4},{value:"pulsar.broker.topic.message.incoming.size",id:"pulsarbrokertopicmessageincomingsize",level:4},{value:"pulsar.broker.topic.message.outgoing.size",id:"pulsarbrokertopicmessageoutgoingsize",level:4},{value:"pulsar.broker.topic.publish.rate.limit.count",id:"pulsarbrokertopicpublishratelimitcount",level:4},{value:"pulsar.broker.topic.storage.size",id:"pulsarbrokertopicstoragesize",level:4},{value:"pulsar.broker.topic.storage.logical.size",id:"pulsarbrokertopicstoragelogicalsize",level:4},{value:"pulsar.broker.topic.storage.backlog.size",id:"pulsarbrokertopicstoragebacklogsize",level:4},{value:"pulsar.broker.topic.storage.offloaded.size",id:"pulsarbrokertopicstorageoffloadedsize",level:4},{value:"pulsar.broker.topic.storage.backlog.quota.limit.size",id:"pulsarbrokertopicstoragebacklogquotalimitsize",level:4},{value:"pulsar.broker.topic.storage.backlog.quota.limit.time",id:"pulsarbrokertopicstoragebacklogquotalimittime",level:4},{value:"pulsar.broker.topic.storage.backlog.quota.eviction.count",id:"pulsarbrokertopicstoragebacklogquotaevictioncount",level:4},{value:"pulsar.broker.topic.storage.backlog.age",id:"pulsarbrokertopicstoragebacklogage",level:4},{value:"pulsar.broker.topic.storage.entry.outgoing.count",id:"pulsarbrokertopicstorageentryoutgoingcount",level:4},{value:"pulsar.broker.topic.storage.entry.incoming.count",id:"pulsarbrokertopicstorageentryincomingcount",level:4},{value:"pulsar.broker.topic.compaction.removed.message.count",id:"pulsarbrokertopiccompactionremovedmessagecount",level:4},{value:"pulsar.broker.topic.compaction.operation.count",id:"pulsarbrokertopiccompactionoperationcount",level:4},{value:"pulsar.broker.topic.compaction.duration",id:"pulsarbrokertopiccompactionduration",level:4},{value:"pulsar.broker.topic.compaction.incoming.size",id:"pulsarbrokertopiccompactionincomingsize",level:4},{value:"pulsar.broker.topic.compaction.outgoing.size",id:"pulsarbrokertopiccompactionoutgoingsize",level:4},{value:"pulsar.broker.topic.compaction.compacted.entry.count",id:"pulsarbrokertopiccompactioncompactedentrycount",level:4},{value:"pulsar.broker.topic.compaction.compacted.entry.size",id:"pulsarbrokertopiccompactioncompactedentrysize",level:4},{value:"pulsar.broker.topic.transaction.count",id:"pulsarbrokertopictransactioncount",level:4},{value:"pulsar.broker.topic.subscription.delayed.entry.count",id:"pulsarbrokertopicsubscriptiondelayedentrycount",level:4},{value:"Topic Lookup metrics",id:"topic-lookup-metrics",level:3},{value:"pulsar.broker.lookup.request.duration",id:"pulsarbrokerlookuprequestduration",level:4},{value:"pulsar.broker.request.topic.lookup.concurrent.usage",id:"pulsarbrokerrequesttopiclookupconcurrentusage",level:4},{value:"pulsar.broker.request.topic.lookup.concurrent.limit",id:"pulsarbrokerrequesttopiclookupconcurrentlimit",level:4},{value:"pulsar.broker.topic.load.concurrent.usage",id:"pulsarbrokertopicloadconcurrentusage",level:4},{value:"pulsar.broker.topic.load.concurrent.limit",id:"pulsarbrokertopicloadconcurrentlimit",level:4},{value:"Metadata Store metrics",id:"metadata-store-metrics",level:3},{value:"pulsar.broker.metadata.store.outgoing.size",id:"pulsarbrokermetadatastoreoutgoingsize",level:4},{value:"pulsar.broker.metadata.store.executor.queue.size",id:"pulsarbrokermetadatastoreexecutorqueuesize",level:4},{value:"Consumer metrics",id:"consumer-metrics",level:3},{value:"pulsar.broker.consumer.message.outgoing.count",id:"pulsarbrokerconsumermessageoutgoingcount",level:4},{value:"pulsar.broker.consumer.message.outgoing.size",id:"pulsarbrokerconsumermessageoutgoingsize",level:4},{value:"pulsar.broker.consumer.message.ack.count",id:"pulsarbrokerconsumermessageackcount",level:4},{value:"pulsar.broker.consumer.message.redeliver.count",id:"pulsarbrokerconsumermessageredelivercount",level:4},{value:"pulsar.broker.consumer.message.unack.count",id:"pulsarbrokerconsumermessageunackcount",level:4},{value:"pulsar.broker.consumer.permit.count",id:"pulsarbrokerconsumerpermitcount",level:4},{value:"Producer metrics",id:"producer-metrics",level:3},{value:"pulsar.broker.producer.message.incoming.count",id:"pulsarbrokerproducermessageincomingcount",level:4},{value:"pulsar.broker.producer.message.incoming.size",id:"pulsarbrokerproducermessageincomingsize",level:4},{value:"pulsar.broker.producer.message.drop.count",id:"pulsarbrokerproducermessagedropcount",level:4},{value:"Managed Ledger metrics",id:"managed-ledger-metrics",level:3},{value:"pulsar.broker.managed_ledger.message.outgoing.count",id:"pulsarbrokermanaged_ledgermessageoutgoingcount",level:4},{value:"pulsar.broker.managed_ledger.message.outgoing.logical.size",id:"pulsarbrokermanaged_ledgermessageoutgoinglogicalsize",level:4},{value:"pulsar.broker.managed_ledger.message.outgoing.replicated.size",id:"pulsarbrokermanaged_ledgermessageoutgoingreplicatedsize",level:4},{value:"pulsar.broker.managed_ledger.backlog.count",id:"pulsarbrokermanaged_ledgerbacklogcount",level:4},{value:"pulsar.broker.managed_ledger.message.incoming.count",id:"pulsarbrokermanaged_ledgermessageincomingcount",level:4},{value:"pulsar.broker.managed_ledger.message.incoming.size",id:"pulsarbrokermanaged_ledgermessageincomingsize",level:4},{value:"pulsar.broker.managed_ledger.message.incoming.cache.miss.count",id:"pulsarbrokermanaged_ledgermessageincomingcachemisscount",level:4},{value:"pulsar.broker.managed_ledger.mark_delete.count",id:"pulsarbrokermanaged_ledgermark_deletecount",level:4},{value:"pulsar.broker.managed_ledger.inflight.read.limit",id:"pulsarbrokermanaged_ledgerinflightreadlimit",level:4},{value:"pulsar.broker.managed_ledger.inflight.read.usage",id:"pulsarbrokermanaged_ledgerinflightreadusage",level:4},{value:"Schema Registry Metrics",id:"schema-registry-metrics",level:3},{value:"pulsar.broker.request.schema_registry.duration",id:"pulsarbrokerrequestschema_registryduration",level:4},{value:"pulsar.broker.operation.schema_registry.compatibility_check.count",id:"pulsarbrokeroperationschema_registrycompatibility_checkcount",level:4},{value:"HTTP Request Filter Metrics",id:"http-request-filter-metrics",level:3},{value:"pulsar.web.filter.rate_limit.request.count",id:"pulsarwebfilterrate_limitrequestcount",level:4}];function a(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Pulsar exposes the following OpenTelemetry metrics."}),"\n",(0,s.jsx)(n.h2,{id:"broker",children:"Broker"}),"\n",(0,s.jsx)(n.h3,{id:"connection-metrics",children:"Connection Metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconnectioncount",children:"pulsar.broker.connection.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of connections."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{connection}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.connection.status"})," - The status of the connection. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"active"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"open"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"close"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconnectioncreateoperationcount",children:"pulsar.broker.connection.create.operation.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of connection create operations."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.connection.create.operation.status"})," - The status of the create operation. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"success"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"failure"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconnectionrate_limitcount",children:"pulsar.broker.connection.rate_limit.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of times a connection has been rate limited."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.connection.rate_limit.operation.name"})," - The name of the rate limiting operation performed. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"paused"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"resumed"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"throttled"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"unthrottled"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"topic-messaging-metrics",children:"Topic Messaging metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicsubscriptioncount",children:"pulsar.broker.topic.subscription.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of Pulsar subscriptions of the topic served by this broker."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{subscription}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicproducercount",children:"pulsar.broker.topic.producer.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of active producers of the topic connected to this broker."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{producer}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicconsumercount",children:"pulsar.broker.topic.consumer.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of active consumers of the topic connected to this broker."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{consumer}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicmessageincomingcount",children:"pulsar.broker.topic.message.incoming.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages received for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicmessageoutgoingcount",children:"pulsar.broker.topic.message.outgoing.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages read from this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicmessageincomingsize",children:"pulsar.broker.topic.message.incoming.size"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages bytes received for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicmessageoutgoingsize",children:"pulsar.broker.topic.message.outgoing.size"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages bytes read from this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicpublishratelimitcount",children:"pulsar.broker.topic.publish.rate.limit.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of times the publish rate limit is triggered."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{event}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstoragesize",children:"pulsar.broker.topic.storage.size"}),"\n",(0,s.jsx)(n.p,{children:"The total storage size of the messages in this topic, including storage used by replicas."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstoragelogicalsize",children:"pulsar.broker.topic.storage.logical.size"}),"\n",(0,s.jsx)(n.p,{children:"The storage size of the messages in this topic, excluding storage used by replicas."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstoragebacklogsize",children:"pulsar.broker.topic.storage.backlog.size"}),"\n",(0,s.jsx)(n.p,{children:"The size of the backlog storage for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstorageoffloadedsize",children:"pulsar.broker.topic.storage.offloaded.size"}),"\n",(0,s.jsx)(n.p,{children:"The total amount of the data in this topic offloaded to the tiered storage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstoragebacklogquotalimitsize",children:"pulsar.broker.topic.storage.backlog.quota.limit.size"}),"\n",(0,s.jsx)(n.p,{children:"The size based backlog quota limit for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstoragebacklogquotalimittime",children:"pulsar.broker.topic.storage.backlog.quota.limit.time"}),"\n",(0,s.jsx)(n.p,{children:"The time based backlog quota limit for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Gauge"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"s"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstoragebacklogquotaevictioncount",children:"pulsar.broker.topic.storage.backlog.quota.eviction.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of times a backlog was evicted since it has exceeded its quota."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{eviction}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.backlog.quota.type"})," - The backlog quota type. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"size"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"time"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstoragebacklogage",children:"pulsar.broker.topic.storage.backlog.age"}),"\n",(0,s.jsx)(n.p,{children:"The age of the oldest unacknowledged message (backlog)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Gauge"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"s"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstorageentryoutgoingcount",children:"pulsar.broker.topic.storage.entry.outgoing.count"}),"\n",(0,s.jsx)(n.p,{children:"The total message batches (entries) written to the storage for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{entry}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicstorageentryincomingcount",children:"pulsar.broker.topic.storage.entry.incoming.count"}),"\n",(0,s.jsx)(n.p,{children:"The total message batches (entries) read from the storage for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{entry}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopiccompactionremovedmessagecount",children:"pulsar.broker.topic.compaction.removed.message.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages removed by compaction."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopiccompactionoperationcount",children:"pulsar.broker.topic.compaction.operation.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of compaction operations."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.compaction.status"})," - The compaction status. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"success"})}),"\n",(0,s.jsx)(n.li,{children:"`failure"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopiccompactionduration",children:"pulsar.broker.topic.compaction.duration"}),"\n",(0,s.jsx)(n.p,{children:"The total time duration of compaction operations on the topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: DoubleUpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"s"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopiccompactionincomingsize",children:"pulsar.broker.topic.compaction.incoming.size"}),"\n",(0,s.jsx)(n.p,{children:"The total count of bytes read by the compaction process for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopiccompactionoutgoingsize",children:"pulsar.broker.topic.compaction.outgoing.size"}),"\n",(0,s.jsx)(n.p,{children:"The total count of bytes written by the compaction process for this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopiccompactioncompactedentrycount",children:"pulsar.broker.topic.compaction.compacted.entry.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of compacted entries."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{entry}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopiccompactioncompactedentrysize",children:"pulsar.broker.topic.compaction.compacted.entry.size"}),"\n",(0,s.jsx)(n.p,{children:"The total size of the compacted entries."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopictransactioncount",children:"pulsar.broker.topic.transaction.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of transactions on this topic."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{transaction}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.transaction.status"})," - The transaction status. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"active"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"committed"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"aborted"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicsubscriptiondelayedentrycount",children:"pulsar.broker.topic.subscription.delayed.entry.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of message batches (entries) delayed for dispatching."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{entry}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.partition.index"})," - The partition index of the topic. Present only if the topic is partitioned."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"topic-lookup-metrics",children:"Topic Lookup metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerlookuprequestduration",children:"pulsar.broker.lookup.request.duration"}),"\n",(0,s.jsx)(n.p,{children:"The duration of topic lookup requests (either binary or HTTP)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Histogram"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"second"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.lookup.response"})," - The response type of the lookup request","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"failure"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"broker"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"redirect"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerrequesttopiclookupconcurrentusage",children:"pulsar.broker.request.topic.lookup.concurrent.usage"}),"\n",(0,s.jsx)(n.p,{children:'The number of pending lookup operations in the broker. When it reaches threshold "maxConcurrentLookupRequest" defined in broker.conf, new requests are rejected.'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerrequesttopiclookupconcurrentlimit",children:"pulsar.broker.request.topic.lookup.concurrent.limit"}),"\n",(0,s.jsx)(n.p,{children:'The maximum number of pending lookup operations in the broker. Equal to "maxConcurrentLookupRequest" defined in broker.conf.'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicloadconcurrentusage",children:"pulsar.broker.topic.load.concurrent.usage"}),"\n",(0,s.jsx)(n.p,{children:'The number of pending topic load operations in the broker. When it reaches threshold "maxConcurrentTopicLoadRequest" defined in broker.conf, new requests are rejected.'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokertopicloadconcurrentlimit",children:"pulsar.broker.topic.load.concurrent.limit"}),"\n",(0,s.jsx)(n.p,{children:'The maximum number of pending topic load operations in the broker. Equal to "maxConcurrentTopicLoadRequest" defined in broker.conf.'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"metadata-store-metrics",children:"Metadata Store metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermetadatastoreoutgoingsize",children:"pulsar.broker.metadata.store.outgoing.size"}),"\n",(0,s.jsx)(n.p,{children:"The total amount of data written to the metadata store."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{By}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.metadata.store.name"})," - The name of the metadata store."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermetadatastoreexecutorqueuesize",children:"pulsar.broker.metadata.store.executor.queue.size"}),"\n",(0,s.jsx)(n.p,{children:"The number of batch operations in the metadata store executor queue."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.metadata.store.name"})," - The name of the metadata store."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"consumer-metrics",children:"Consumer metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconsumermessageoutgoingcount",children:"pulsar.broker.consumer.message.outgoing.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages dispatched to this consumer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.name"})," - The topic subscription name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.type"})," - The subscription type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.name"})," - The name of the consumer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.id"})," - The ID of the consumer."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconsumermessageoutgoingsize",children:"pulsar.broker.consumer.message.outgoing.size"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages bytes dispatched to this consumer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.name"})," - The topic subscription name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.type"})," - The subscription type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.name"})," - The name of the consumer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.id"})," - The ID of the consumer."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconsumermessageackcount",children:"pulsar.broker.consumer.message.ack.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of message acknowledgments received from this consumer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{ack}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.name"})," - The topic subscription name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.type"})," - The subscription type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.name"})," - The name of the consumer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.id"})," - The ID of the consumer."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconsumermessageredelivercount",children:"pulsar.broker.consumer.message.redeliver.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages that have been redelivered to this consumer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.name"})," - The topic subscription name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.type"})," - The subscription type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.name"})," - The name of the consumer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.id"})," - The ID of the consumer."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconsumermessageunackcount",children:"pulsar.broker.consumer.message.unack.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of messages currently unacknowledged by this consumer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.name"})," - The topic subscription name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.type"})," - The subscription type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.name"})," - The name of the consumer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.id"})," - The ID of the consumer."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerconsumerpermitcount",children:"pulsar.broker.consumer.permit.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of permits currently available for this consumer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{permit}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.name"})," - The topic subscription name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.subscription.type"})," - The subscription type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.name"})," - The name of the consumer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.consumer.id"})," - The ID of the consumer."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"producer-metrics",children:"Producer metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerproducermessageincomingcount",children:"pulsar.broker.producer.message.incoming.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages received from this producer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.name"})," - The name of the producer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.id"})," - The ID of the producer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.access_mode"})," - The access mode of the producer. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"shared"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"exclusive"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"wait_for_exclusive"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"exclusive_with_fencing"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerproducermessageincomingsize",children:"pulsar.broker.producer.message.incoming.size"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages bytes received from this producer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.name"})," - The name of the producer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.id"})," - The ID of the producer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.access_mode"})," - The access mode of the producer. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"shared"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"exclusive"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"wait_for_exclusive"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"exclusive_with_fencing"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerproducermessagedropcount",children:"pulsar.broker.producer.message.drop.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages dropped from this producer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.domain"})," - The domain of the topic. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"persistent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"non-persistent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.tenant"})," - The topic tenant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The topic namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.topic"})," - The topic name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.name"})," - The name of the producer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.id"})," - The ID of the producer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.producer.access_mode"})," - The access mode of the producer. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"shared"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"exclusive"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"wait_for_exclusive"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"exclusive_with_fencing"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"managed-ledger-metrics",children:"Managed Ledger metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgermessageoutgoingcount",children:"pulsar.broker.managed_ledger.message.outgoing.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of write operations to this ledger."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The managed ledger namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.name"})," - The name of the managed ledger."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.operation.status"})," - The status of the managed ledger operation. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"success"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"failure"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgermessageoutgoinglogicalsize",children:"pulsar.broker.managed_ledger.message.outgoing.logical.size"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages bytes written to this ledger, excluding replicas."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The managed ledger namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.name"})," - The name of the managed ledger."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgermessageoutgoingreplicatedsize",children:"pulsar.broker.managed_ledger.message.outgoing.replicated.size"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages bytes written to this ledger, including replicas."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The managed ledger namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.name"})," - The name of the managed ledger."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgerbacklogcount",children:"pulsar.broker.managed_ledger.backlog.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of messages in backlog for all consumers from this ledger."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{message}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The managed ledger namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.name"})," - The name of the managed ledger."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgermessageincomingcount",children:"pulsar.broker.managed_ledger.message.incoming.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of read operations from this ledger."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The managed ledger namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.name"})," - The name of the managed ledger."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.operation.status"})," - The status of the managed ledger operation. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"success"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"failure"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgermessageincomingsize",children:"pulsar.broker.managed_ledger.message.incoming.size"}),"\n",(0,s.jsx)(n.p,{children:"The total number of messages bytes read from this ledger."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The managed ledger namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.name"})," - The name of the managed ledger."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgermessageincomingcachemisscount",children:"pulsar.broker.managed_ledger.message.incoming.cache.miss.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of cache misses during read operations from this ledger."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: UpDownCounter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The managed ledger namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.name"})," - The name of the managed ledger."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgermark_deletecount",children:"pulsar.broker.managed_ledger.mark_delete.count"}),"\n",(0,s.jsx)(n.p,{children:"The total number of mark delete operations for this ledger."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The managed ledger namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.name"})," - The name of the managed ledger."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgerinflightreadlimit",children:"pulsar.broker.managed_ledger.inflight.read.limit"}),"\n",(0,s.jsx)(n.p,{children:"Maximum number of bytes that can be retained by managed ledger data read from storage or cache."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokermanaged_ledgerinflightreadusage",children:"pulsar.broker.managed_ledger.inflight.read.usage"}),"\n",(0,s.jsx)(n.p,{children:"Estimated number of bytes retained by managed ledger data read from storage or cache."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"By"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.managed_ledger.inflight.read.usage.state"})," - Indicates managed ledger memory limiter usage state. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"used"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"free"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"schema-registry-metrics",children:"Schema Registry Metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokerrequestschema_registryduration",children:"pulsar.broker.request.schema_registry.duration"}),"\n",(0,s.jsx)(n.p,{children:"The duration of Schema Registry requests"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Histogram"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"s"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The namespace referred by the Schema Registry request"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.schema_registry.request"})," - The Schema Registry request type","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"get"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"list"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"put"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"delete"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.schema_registry.response"})," - The Schema Registry response type","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"success"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"failure"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pulsarbrokeroperationschema_registrycompatibility_checkcount",children:"pulsar.broker.operation.schema_registry.compatibility_check.count"}),"\n",(0,s.jsx)(n.p,{children:"The number of Schema Registry compatibility check operations performed by the broker."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{operation}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.namespace"})," - The namespace referred by the compatibility check operation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.schema_registry.compatibility_check.response"})," - The compatibility check response type","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"compatible"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"incompatible"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"http-request-filter-metrics",children:"HTTP Request Filter Metrics"}),"\n",(0,s.jsx)(n.h4,{id:"pulsarwebfilterrate_limitrequestcount",children:"pulsar.web.filter.rate_limit.request.count"}),"\n",(0,s.jsx)(n.p,{children:"Counter of HTTP requests processed by the rate limiting filter."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Counter"}),"\n",(0,s.jsxs)(n.li,{children:["Unit: ",(0,s.jsx)(n.code,{children:"{request}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pulsar.web.filter.rate_limit.result"})," - The result of the rate limiting operation. Can be one of:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"accepted"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"rejected"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var s=i(96540);const r={},l=s.createContext(r);function c(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);