"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[48059],{18429:(e,d,s)=>{s.r(d),s.d(d,{assets:()=>o,contentTitle:()=>r,default:()=>x,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var n=s(74848),i=s(28453);const t={id:"io-hdfs",title:"Hdfs Connector",sidebar_label:"Hdfs Connector",original_id:"io-hdfs"},r=void 0,c={id:"io-hdfs",title:"Hdfs Connector",description:"Sink",source:"@site/versioned_docs/version-2.3.1/io-hdfs.md",sourceDirName:".",slug:"/io-hdfs",permalink:"/docs/2.3.1/io-hdfs",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.3.1/io-hdfs.md",tags:[],version:"2.3.1",frontMatter:{id:"io-hdfs",title:"Hdfs Connector",sidebar_label:"Hdfs Connector",original_id:"io-hdfs"}},o={},l=[{value:"Sink",id:"sink",level:2},{value:"Sink Configuration Options",id:"sink-configuration-options",level:2}];function h(e){const d={code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(d.h2,{id:"sink",children:"Sink"}),"\n",(0,n.jsx)(d.p,{children:"The Hdfs Sink Connector is used to pull messages from Pulsar topics and persist the messages\nto an hdfs file."}),"\n",(0,n.jsx)(d.h2,{id:"sink-configuration-options",children:"Sink Configuration Options"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{children:"Name"}),(0,n.jsx)(d.th,{children:"Default"}),(0,n.jsx)(d.th,{children:"Required"}),(0,n.jsx)(d.th,{children:"Description"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"hdfsConfigResources"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"true"})}),(0,n.jsx)(d.td,{children:"A file or comma separated list of files which contains the Hadoop file system configuration, e.g. 'core-site.xml', 'hdfs-site.xml'."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"directory"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"true"})}),(0,n.jsx)(d.td,{children:"The HDFS directory from which files should be read from or written to."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"encoding"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The character encoding for the files, e.g. UTF-8, ASCII, etc."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"compression"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The compression codec used to compress/de-compress the files on HDFS."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"kerberosUserPrincipal"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The Kerberos user principal account to use for authentication."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"keytab"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The full pathname to the Kerberos keytab file to use for authentication."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"filenamePrefix"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:'The prefix of the files to create inside the HDFS directory, i.e. a value of "topicA" will result in files named topicA-, topicA-, etc being produced.'})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"fileExtension"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The extension to add to the files written to HDFS, e.g. '.txt', '.seq', etc."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"separator"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The character to use to separate records in a text file. If no value is provided then the content from all of the records will be concatenated together in one continuous byte array."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"syncInterval"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The interval (in milliseconds) between calls to flush data to HDFS disk."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"maxPendingRecords"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"Integer.MAX_VALUE"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsxs)(d.td,{children:["The maximum number of records that we hold in memory before acking. Default is ",(0,n.jsx)(d.code,{children:"Integer.MAX_VALUE"}),". Setting this value to one, results in every record being sent to disk before the record is acked, while setting it to a higher values allows us to buffer records before flushing them all to disk."]})]})]})]})]})}function x(e={}){const{wrapper:d}={...(0,i.R)(),...e.components};return d?(0,n.jsx)(d,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,d,s)=>{s.d(d,{R:()=>r,x:()=>c});var n=s(96540);const i={},t=n.createContext(i);function r(e){const d=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function c(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(t.Provider,{value:d},e.children)}}}]);