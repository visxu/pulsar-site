"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[36244],{13715:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var n=a(74848),s=a(28453);const i={id:"client-java-2.11.2",title:"Client Java 2.11.2",sidebar_label:"Client Java 2.11.2"},r=void 0,l={id:"versioned/client-java-2.11.2",title:"Client Java 2.11.2",description:"- improve Cache empty schema version in ProducerImpl schemaCache #19929",source:"@site/release-notes/versioned/client-java-2.11.2.md",sourceDirName:"versioned",slug:"/versioned/client-java-2.11.2",permalink:"/release-notes/versioned/client-java-2.11.2",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/release-notes/versioned/client-java-2.11.2.md",tags:[],version:"current",frontMatter:{id:"client-java-2.11.2",title:"Client Java 2.11.2",sidebar_label:"Client Java 2.11.2"}},c={},o=[];function h(e){const t={a:"a",li:"li",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["[improve][Java] Cache empty schema version in ProducerImpl schemaCache ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/19929",children:"#19929"})]}),"\n",(0,n.jsxs)(t.li,{children:["[improve][Java] Make the whole grabCnx() progress atomic ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/20595",children:"#20595"})]}),"\n",(0,n.jsxs)(t.li,{children:["[fix][Java] Use scheduled executor in BinaryProtoLookupService ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/20043",children:"#20043"})]}),"\n",(0,n.jsxs)(t.li,{children:["[fix][Java] Release the orphan producers after the primary consumer is closed ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/19858",children:"#19858"})]}),"\n",(0,n.jsxs)(t.li,{children:["[fix][Java] Fix NPE when acknowledging multiple messages ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/19874",children:"#19874"})]}),"\n",(0,n.jsxs)(t.li,{children:["[fix][Java] Fix where the function getMsgNumInReceiverQueue always returns 0 when using message listener ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/20245",children:"#20245"})]}),"\n",(0,n.jsxs)(t.li,{children:["[fix][Java] Fix deadlock issue of consumer while using multiple IO threads ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/20669",children:"#20669"})]}),"\n",(0,n.jsxs)(t.li,{children:["[fix][Java] Messages lost when consumer reconnect ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/20695",children:"#20695"})]}),"\n"]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>l});var n=a(96540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);