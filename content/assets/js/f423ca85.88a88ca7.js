"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[18081],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>g});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(r),d=a,g=p["".concat(i,".").concat(d)]||p[d]||m[d]||s;return r?n.createElement(g,o(o({ref:t},c),{},{components:r})):n.createElement(g,o({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[p]="string"==typeof e?e:a,o[1]=u;for(var l=2;l<s;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},19365:(e,t,r)=>{r.d(t,{A:()=>o});var n=r(96540),a=r(20053);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,o),hidden:r},t)}},11470:(e,t,r)=>{r.d(t,{A:()=>C});var n=r(58168),a=r(96540),s=r(20053),o=r(23104),u=r(56347),i=r(57485),l=r(31682),c=r(89466);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function m(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??p(r);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:r}=e;const n=(0,u.W6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function b(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,s=m(e),[o,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[i,l]=g({queryString:r,groupId:n}),[p,b]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,c.Dv)(r);return[n,(0,a.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:n}),h=(()=>{const e=i??p;return d({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{h&&u(h)}),[h]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);u(e),l(e),b(e)}),[l,b,s]),tabValues:s}}var h=r(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:r,selectedValue:u,selectValue:i,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.a_)(),m=e=>{const t=e.currentTarget,r=c.indexOf(t),n=l[r].value;n!==u&&(p(t),i(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;t=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;t=c[r]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},t)},l.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.A)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},o,{className:(0,s.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":u===t})}),r??t)})))}function v(e){let{lazy:t,children:r,selectedValue:n}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=b(e);return a.createElement("div",{className:(0,s.A)("tabs-container",f.tabList)},a.createElement(y,(0,n.A)({},e,t)),a.createElement(v,(0,n.A)({},e,t)))}function C(e){const t=(0,h.A)();return a.createElement(w,(0,n.A)({key:String(t)},e))}},58572:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>u,metadata:()=>l,toc:()=>p});var n=r(58168),a=(r(96540),r(15680)),s=r(11470),o=r(19365);const u={id:"cookbooks-message-queue",title:"Use Pulsar as a message queue",sidebar_label:"Message queue",description:"Learn how to use Pulsar as a message queue."},i=void 0,l={unversionedId:"cookbooks-message-queue",id:"version-4.0.x/cookbooks-message-queue",title:"Use Pulsar as a message queue",description:"Learn how to use Pulsar as a message queue.",source:"@site/versioned_docs/version-4.0.x/cookbooks-message-queue.md",sourceDirName:".",slug:"/cookbooks-message-queue",permalink:"/docs/4.0.x/cookbooks-message-queue",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-4.0.x/cookbooks-message-queue.md",tags:[],version:"4.0.x",frontMatter:{id:"cookbooks-message-queue",title:"Use Pulsar as a message queue",sidebar_label:"Message queue",description:"Learn how to use Pulsar as a message queue."},sidebar:"docsSidebar",previous:{title:"Message retention and expiry",permalink:"/docs/4.0.x/cookbooks-retention-expiry"},next:{title:"BookKeeper Ledger Metadata",permalink:"/docs/4.0.x/cookbooks-bookkeepermetadata"}},c={},p=[{value:"Client configuration changes",id:"client-configuration-changes",level:2},{value:"Example",id:"example",level:2}],m={toc:p},d="wrapper";function g(e){let{components:t,...r}=e;return(0,a.yg)(d,(0,n.A)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Message queues are essential components of many large-scale data architectures. If every single work object that passes through your system absolutely ",(0,a.yg)("em",{parentName:"p"},"must")," be processed in spite of the slowness or downright failure of this or that system component, there's a good chance that you'll need a message queue to step in and ensure that unprocessed data is retained---with correct ordering---until the required actions are taken."),(0,a.yg)("p",null,"Pulsar is a great choice for a message queue because:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"it was built with ",(0,a.yg)("a",{parentName:"li",href:"/docs/4.0.x/concepts-architecture-overview#persistent-storage"},"persistent message storage")," in mind"),(0,a.yg)("li",{parentName:"ul"},"it offers automatic load balancing across ",(0,a.yg)("a",{parentName:"li",href:"/docs/4.0.x/reference-terminology#consumer"},"consumers")," for messages on a topic (or custom load balancing if you wish)")),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"You can use the same Pulsar installation to act as a real-time message bus and as a message queue if you wish (or just one or the other). You can set aside some topics for real-time purposes and other topics for message queue purposes (or use specific namespaces for either purpose if you wish).")),(0,a.yg)("h2",{id:"client-configuration-changes"},"Client configuration changes"),(0,a.yg)("p",null,"To use a Pulsar ",(0,a.yg)("a",{parentName:"p",href:"/docs/4.0.x/reference-terminology#topic"},"topic")," as a message queue, you should distribute the receiver load on that topic across several consumers (the optimal number of consumers depends on the load)."),(0,a.yg)("p",null,"Each consumer must establish a ",(0,a.yg)("a",{parentName:"p",href:"/docs/4.0.x/concepts-messaging#shared"},"shared subscription")," and use the same subscription name as the other consumers (otherwise the subscription is not shared and the consumers can't act as a processing ensemble)."),(0,a.yg)("p",null,"If you'd like to have tight control over message dispatching across consumers, set the consumers' ",(0,a.yg)("strong",{parentName:"p"},"receiver queue")," size very low (potentially even to 0 if necessary). Each consumer has a receiver queue that determines how many messages the consumer attempts to fetch at a time. For example, a receiver queue of 1000 (the default) means that the consumer attempts to process 1000 messages from the topic's backlog upon connection. Setting the receiver queue to 0 essentially means ensuring that each consumer is only doing one thing at a time."),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"The receiver queue size of a partitioned topic consumer adopts the minimum one of the following two values:"),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"receiver_queue_size")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"max_total_receiver_queue_size_across_partitions"),"/",(0,a.yg)("inlineCode",{parentName:"li"},"NumPartitions")))),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("p",null,"Here's an example that uses a shared subscription."),(0,a.yg)(s.A,{groupId:"lang-choice",defaultValue:"Java",values:[{label:"Java",value:"Java"},{label:"Python",value:"Python"},{label:"C++",value:"C++"},{label:"Go",value:"Go"}],mdxType:"Tabs"},(0,a.yg)(o.A,{value:"Java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},'import org.apache.pulsar.client.api.Consumer;\nimport org.apache.pulsar.client.api.PulsarClient;\nimport org.apache.pulsar.client.api.SubscriptionType;\n\nString SERVICE_URL = "pulsar://localhost:6650";\nString TOPIC = "persistent://public/default/mq-topic-1";\nString subscription = "sub-1";\n\nPulsarClient client = PulsarClient.builder()\n        .serviceUrl(SERVICE_URL)\n        .build();\n\nConsumer consumer = client.newConsumer()\n        .topic(TOPIC)\n        .subscriptionName(subscription)\n        .subscriptionType(SubscriptionType.Shared)\n        // If you\'d like to restrict the receiver queue size\n        .receiverQueueSize(10)\n        .subscribe();\n'))),(0,a.yg)(o.A,{value:"Python",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'from pulsar import Client, ConsumerType\n\nSERVICE_URL = "pulsar://localhost:6650"\nTOPIC = "persistent://public/default/mq-topic-1"\nSUBSCRIPTION = "sub-1"\n\nclient = Client(SERVICE_URL)\nconsumer = client.subscribe(\n    TOPIC,\n    SUBSCRIPTION,\n    # If you\'d like to restrict the receiver queue size\n    receiver_queue_size=10,\n    consumer_type=ConsumerType.Shared)\n'))),(0,a.yg)(o.A,{value:"C++",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <pulsar/Client.h>\n\nstd::string serviceUrl = "pulsar://localhost:6650";\nstd::string topic = "persistent://public/defaultmq-topic-1";\nstd::string subscription = "sub-1";\n\nClient client(serviceUrl);\n\nConsumerConfiguration consumerConfig;\nconsumerConfig.setConsumerType(ConsumerType.ConsumerShared);\n// If you\'d like to restrict the receiver queue size\nconsumerConfig.setReceiverQueueSize(10);\n\nConsumer consumer;\n\nResult result = client.subscribe(topic, subscription, consumerConfig, consumer);\n'))),(0,a.yg)(o.A,{value:"Go",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go"},'import "github.com/apache/pulsar-client-go/pulsar"\n\nclient, err := pulsar.NewClient(pulsar.ClientOptions{\n    URL: "pulsar://localhost:6650",\n})\nif err != nil {\n    log.Fatal(err)\n}\nconsumer, err := client.Subscribe(pulsar.ConsumerOptions{\n    Topic:             "persistent://public/default/mq-topic-1",\n    SubscriptionName:  "sub-1",\n    Type:              pulsar.Shared,\n    ReceiverQueueSize: 10, // If you\'d like to restrict the receiver queue size\n})\nif err != nil {\n    log.Fatal(err)\n}\n')))))}g.isMDXComponent=!0}}]);