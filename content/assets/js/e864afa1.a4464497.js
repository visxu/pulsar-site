"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[92773],{77916:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var a=t(74848),s=t(28453),i=t(89089),r=t(19365);const o={id:"admin-api-get-started",title:"Get started",sidebar_label:"Get started",description:"Learn how to manage topics in Pulsar using the Pulsar admin CLI or Pulsar admin APIs."},l=void 0,u={id:"admin-api-get-started",title:"Get started",description:"Learn how to manage topics in Pulsar using the Pulsar admin CLI or Pulsar admin APIs.",source:"@site/versioned_docs/version-3.2.x/admin-get-started.md",sourceDirName:".",slug:"/admin-api-get-started",permalink:"/docs/3.2.x/admin-api-get-started",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-3.2.x/admin-get-started.md",tags:[],version:"3.2.x",frontMatter:{id:"admin-api-get-started",title:"Get started",sidebar_label:"Get started",description:"Learn how to manage topics in Pulsar using the Pulsar admin CLI or Pulsar admin APIs."},sidebar:"docsSidebar",previous:{title:"Tools",permalink:"/docs/3.2.x/admin-api-tools"},next:{title:"Tutorial",permalink:"/docs/3.2.x/admin-api-tutorial"}},c={},p=[];function d(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This guide walks you through the quickest way to get started with the following methods to manage topics."}),"\n",(0,a.jsxs)(i.A,{groupId:"api-choice",defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],children:[(0,a.jsx)(r.A,{value:"pulsar-admin",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"pathname:///reference/#/3.2.x/pulsar-admin/",children:"pulsar-admin CLI"})," is a command-line tool and is available in the bin folder of your Pulsar installation."]})}),(0,a.jsx)(r.A,{value:"REST API",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"pathname:///admin-rest-api/?version=3.2.4",children:"REST API"})," belongs to HTTP calls, which are made against the admin APIs provided by brokers. In addition, both the Java admin API and pulsar-admin CLI use the REST API."]})}),(0,a.jsx)(r.A,{value:"Java",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://pulsar.apache.org/api/admin/3.2.x/",children:"Java admin API"})," is a programmable interface written in Java."]})})]}),"\n",(0,a.jsx)(n.p,{children:"Check the detailed steps below."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mdx-code-block",children:'<Tabs groupId="api-choice"\n  defaultValue="pulsar-admin"\n  values={[{"label":"pulsar-admin","value":"pulsar-admin"},{"label":"REST API","value":"REST API"},{"label":"Java","value":"Java"}]}>\n<TabItem value="pulsar-admin">\n\nTo manage topics using pulsar-admin CLI, complte the following steps.\n\n1. Set the service URL.\n\n2. Create a partitioned topic.\n\n3. Update the number of a partition.\n\n4. Produce messages to the topic.\n\n5. Check the stats of the topic.\n\n6. Delete the topic.\n\n**Prerequisites**\n\n- Install and start Pulsar standalone. This tutorial runs Pulsar 2.11 as an example.\n\n**Steps**\n\n**Step 1:** Set the service URLs to point to the broker service in [client.conf](https://github.com/apache/pulsar/blob/master/conf/client.conf).\n\n    ```bash\n    webServiceUrl=http://localhost:8080/\n    brokerServiceUrl=pulsar://localhost:6650/\n    ```\n\n**Step 2:** Create a persistent topic named _test-topic-1_ with 6 partitions.\n\n    **Input**\n\n    ```bash\n    bin/pulsar-admin topics create-partitioned-topic \\\n    persistent://public/default/test-topic-1 \\\n    --partitions 6\n    ```\n\n    **Output**\n\n    There is no output. You can check the status of the topic in Step 5.\n\n**Step 3:** Update the number of the partition to 8.\n\n    **Input**\n\n    ```bash\n    bin/pulsar-admin topics update-partitioned-topic \\\n    persistent://public/default/test-topic-1 \\\n    --partitions 8\n    ```\n\n    **Output**\n\n    There is no output. You can check the number of partitions in Step 5.\n\n**Step 4:** Produce some messages to the partitioned topic _test-topic-1_.\n\n    **Input**\n\n    ```bash\n    bin/pulsar-perf produce -u pulsar://localhost:6650 -r 1000 -i 1000 persistent://public/default/test-topic-1\n    ```\n\n    **Output**\n\n    ```bash\n    2023-03-07T15:33:56,832+0800 [main] INFO  org.apache.pulsar.testclient.PerformanceProducer - Starting Pulsar perf producer with config: {\n      "confFile" : "/Users/yu/apache-pulsar-2.11.0/conf/client.conf",\n      "serviceURL" : "pulsar://localhost:6650",\n      "authPluginClassName" : "",\n      "authParams" : "",\n      "tlsTrustCertsFilePath" : "",\n      "tlsAllowInsecureConnection" : false,\n      "tlsHostnameVerificationEnable" : false,\n      "maxConnections" : 1,\n      "statsIntervalSeconds" : 1000,\n      "ioThreads" : 1,\n      "enableBusyWait" : false,\n      "listenerName" : null,\n      "listenerThreads" : 1,\n      "maxLookupRequest" : 50000,\n      "topics" : [ "persistent://public/default/test-topic-1" ],\n      "numTestThreads" : 1,\n      "msgRate" : 1000,\n      "msgSize" : 1024,\n      "numTopics" : 1,\n    "numProducers" : 1,\n      "separator" : "-",\n      "sendTimeout" : 0,\n      "producerName" : null,\n      "adminURL" : "http://localhost:8080/",\n\n    ...\n\n    2023-03-07T15:35:03,769+0800 [Thread-0] INFO  org.apache.pulsar.testclient.PerformanceProducer - Aggregated latency stats --- Latency: mean:   8.931 ms - med:   3.775 - 95pct:  32.144 - 99pct:  98.432 - 99.9pct: 216.088 - 99.99pct: 304.807 - 99.999pct: 349.391 - Max: 351.235\n    ```\n\n**Step 5:** Check the internal stats of the partitioned topic _test-topic-1_.\n\n    **Input**\n\n    ```bash\n    bin/pulsar-admin topics partitioned-stats-internal \\\n    persistent://public/default/test-topic-1\n    ```\n\n    **Output**\n\n    Below is a part of the output. For detailed explanations of topic stats, see Pulsar statistics.\n\n    ```bash\n    {\n      "metadata" : {\n        "partitions" : 8\n      },\n      "partitions" : {\n        "persistent://public/default/test-topic-1-partition-1" : {\n          "entriesAddedCounter" : 4213,\n          "numberOfEntries" : 4213,\n          "totalSize" : 8817693,\n          "currentLedgerEntries" : 4212,\n          "currentLedgerSize" : 8806289,\n          "lastLedgerCreatedTimestamp" : "2023-03-07T15:33:59.367+08:00",\n          "waitingCursorsCount" : 0,\n          "pendingAddEntriesCount" : 0,\n          "lastConfirmedEntry" : "65:4211",\n          "state" : "LedgerOpened",\n          "ledgers" : [ {\n            "ledgerId" : 49,\n            "entries" : 1,\n            "size" : 11404,\n            "offloaded" : false,\n            "underReplicated" : false\n          }, {\n            "ledgerId" : 65,\n            "entries" : 0,\n            "size" : 0,\n            "offloaded" : false,\n            "underReplicated" : false\n          } ],\n          "cursors" : {\n            "test-subscriptio-1" : {\n              "markDeletePosition" : "49:-1",\n              "readPosition" : "49:0",\n              "waitingReadOp" : false,\n              "pendingReadOps" : 0,\n              "messagesConsumedCounter" : 0,\n              "cursorLedger" : -1,\n              "cursorLedgerLastEntry" : -1,\n      "individuallyDeletedMessages" : "[]",\n              "lastLedgerSwitchTimestamp" : "2023-03-06T16:41:32.801+08:00",\n              "state" : "NoLedger",\n              "numberOfEntriesSinceFirstNotAckedMessage" : 1,\n              "totalNonContiguousDeletedMessagesRange" : 0,\n              "subscriptionHavePendingRead" : false,\n              "subscriptionHavePendingReplayRead" : false,\n              "properties" : { }\n            },\n            "test-subscription-1" : {\n              "markDeletePosition" : "49:-1",\n              "readPosition" : "49:0",\n              "waitingReadOp" : false,\n              "pendingReadOps" : 0,\n              "messagesConsumedCounter" : 0,\n              "cursorLedger" : -1,\n              "cursorLedgerLastEntry" : -1,\n              "individuallyDeletedMessages" : "[]",\n              "lastLedgerSwitchTimestamp" : "2023-03-06T16:41:32.801+08:00",\n              "state" : "NoLedger",\n              "numberOfEntriesSinceFirstNotAckedMessage" : 1,\n              "totalNonContiguousDeletedMessagesRange" : 0,\n              "subscriptionHavePendingRead" : false,\n              "subscriptionHavePendingReplayRead" : false,\n              "properties" : { }\n            }\n          },\n          "schemaLedgers" : [ ],\n          "compactedLedger" : {\n            "ledgerId" : -1,\n            "entries" : -1,\n            "size" : -1,\n            "offloaded" : false,\n            "underReplicated" : false\n          }\n        },\n    ...\n    ```\n\n**Step 6:** Delete the topic _test-topic-1_.\n\n    **Input**\n\n    ```bash\n    bin/pulsar-admin topics delete-partitioned-topic persistent://public/default/test-topic-1\n    ```\n\n    **Output**\n\n    There is no output. You can verify whether the _test-topic-1_ exists or not using the following command.\n\n    **Input**\n\n    List topics in `public/default` namespace.\n\n    ```bash\n    bin/pulsar-admin topics list public/default\n    ```\n\n</TabItem>\n<TabItem value="REST API">\n\nTo manage topics using REST API, complete the following steps.\n\n1. Create a partitioned topic\n\n2. Update the number of a partition.\n\n3. Produce messages to the topic.\n\n4. Check the stats of the topic.\n\n5. Delete the topic.\n\n**Prerequisites**\n\n- Install and start Pulsar standalone. This tutorial runs Pulsar 2.11 as an example.\n\n**Steps**\n\n**Step 1:** Create a persistent topic named _test-topic-2_ with 4 partitions.\n\n    **Input**\n\n    ```bash\n    curl -X PUT http://localhost:8080/admin/v2/persistent/public/default/test-topic-2/partitions -H \'Content-Type: application/json\' -d "4"\n    ```\n\n    **Output**\n\n    There is no output. You can check the topic in Step 4.\n\n**Step 2:** Update the number of the partition to 5.\n\n    **Input**\n\n    ```bash\n    curl -X POST http://localhost:8080/admin/v2/persistent/public/default/test-topic-2/partitions -H \'Content-Type: application/json\' -d "5"\n    ```\n\n    **Output**\n\n    There is no output. You can check the status of the topic in Step 4.\n\n**Step 3:** Produce some messages to the partitioned topic _test-topic-2_.\n\n    **Input**\n\n    ```bash\n    bin/pulsar-perf produce -u pulsar://localhost:6650 -r 1000 -i 1000 persistent://public/default/test-topic-2\n    ```\n\n    **Output**\n\n    ```bash\n    2023-03-08T15:47:06,268+0800 [main] INFO  org.apache.pulsar.testclient.PerformanceProducer - Starting Pulsar perf producer with config: {\n      "confFile" : "/Users/yu/apache-pulsar-2.11.0/conf/client.conf",\n      "serviceURL" : "pulsar://localhost:6650",\n      "authPluginClassName" : "",\n      "authParams" : "",\n      "tlsTrustCertsFilePath" : "",\n      "tlsAllowInsecureConnection" : false,\n      "tlsHostnameVerificationEnable" : false,\n      "maxConnections" : 1,\n      "statsIntervalSeconds" : 1000,\n      "ioThreads" : 1,\n      "enableBusyWait" : false,\n      "listenerName" : null,\n      "listenerThreads" : 1,\n      "maxLookupRequest" : 50000,\n      "topics" : [ "persistent://public/default/test-topic-2" ],\n      "numTestThreads" : 1,\n      "msgRate" : 1000,\n      "msgSize" : 1024,\n      "numTopics" : 1,\n    "numProducers" : 1,\n      "separator" : "-",\n      "sendTimeout" : 0,\n      "producerName" : null,\n      "adminURL" : "http://localhost:8080/",\n      "deprecatedAuthPluginClassName" : null,\n      "maxOutstanding" : 0,\n      "maxPendingMessagesAcrossPartitions" : 0,\n      "partitions" : null,\n      "numMessages" : 0,\n      "compression" : "NONE",\n      "payloadFilename" : null,\n      "payloadDelimiter" : "\\\\n",\n      "batchTimeMillis" : 1.0,\n      "batchMaxMessages" : 1000,\n      "batchMaxBytes" : 4194304,\n      "testTime" : 0,\n      "warmupTimeSeconds" : 1.0,\n      "encKeyName" : null,\n      "encKeyFile" : null,\n      "delay" : 0,\n      "exitOnFailure" : false,\n      "messageKeyGenerationMode" : null,\n      "producerAccessMode" : "Shared",\n      "formatPayload" : false,\n      "formatterClass" : "org.apache.pulsar.testclient.DefaultMessageFormatter",\n      "transactionTimeout" : 10,\n      "numMessagesPerTransaction" : 50,\n      "isEnableTransaction" : false,\n\n      "isAbortTransaction" : false,\n      "histogramFile" : null\n    }\n\n    ...\n\n    2023-03-08T15:53:28,178+0800 [Thread-0] INFO  org.apache.pulsar.testclient.PerformanceProducer - Aggregated latency stats --- Latency: mean:   4.481 ms - med:   2.918 - 95pct:  10.710 - 99pct:  38.928 - 99.9pct: 112.689 - 99.99pct: 154.241 - 99.999pct: 193.249 - Max: 241.717\n    ```\n\n**Step 4:** Check the internal stats of the topic _test-topic-2_.\n\n    **Input**\n\n    ```bash\n    curl -X GET http://localhost:8080/admin/v2/persistent/public/default/test-topic-2/partitioned-internalStats\n    ```\n\n    **Output**\n\n    For detailed explanations of topic stats, see Pulsar statistics.\n\n    ```bash\n    {"metadata":{"partitions":5},"partitions":{"persistent://public/default/test-topic-2-partition-3":{"entriesAddedCounter":47087,"numberOfEntries":47087,"totalSize":80406959,"currentLedgerEntries":47087,"currentLedgerSize":80406959,"lastLedgerCreatedTimestamp":"2023-03-08T15:47:07.273+08:00","waitingCursorsCount":0,"pendingAddEntriesCount":0,"lastConfirmedEntry":"117:47086","state":"LedgerOpened","ledgers":[{"ledgerId":117,"entries":0,"size":0,"offloaded":false,"underReplicated":false}],"cursors":{},"schemaLedgers":[],"compactedLedger":{"ledgerId":-1,"entries":-1,"size":-1,"offloaded":false,"underReplicated":false}},"persistent://public/default/test-topic-2-partition-2":{"entriesAddedCounter":46995,"numberOfEntries":46995,"totalSize":80445417,"currentLedgerEntries":46995,"currentLedgerSize":80445417,"lastLedgerCreatedTimestamp":"2023-03-08T15:47:07.43+08:00","waitingCursorsCount":0,"pendingAddEntriesCount":0,"lastConfirmedEntry":"118:46994","state":"LedgerOpened","ledgers":[{"ledgerId":118,"entries":0,"size":0,"offloaded":false,"underReplicated":false}],...\n    ```\n\n**Step 5:** Delete the topic _test-topic-2_.\n\n    **Input**\n\n    ```\n    curl -X DELETE http://localhost:8080/admin/v2/persistent/public/default/test-topic-2/partitions\n    ```\n\n    **Output**\n\n    There is no output. You can verify whether the _test-topic-2_ exists or not using the following command.\n\n    **Input**\n\n    List topics in `public/default` namespace.\n\n    ```\n    curl -X GET http://localhost:8080/admin/v2/persistent/public/default\n    ```\n\n</TabItem>\n<TabItem value="Java">\n\nTo manage topics using Java admin API, complete following steps.\n\n1. Initiate a Pulsar Java client.\n\n2. Create a partitioned topic\n\n3. Update the number of a partition.\n\n4. Produce messages to the topic.\n\n5. Check the stats of the topic.\n\n6. Delete the topic.\n\n**Prerequisites**\n\n- Prepare a Java project and add the following dependency to your POM file.\n\n  ```java\n  <dependency>\n        <groupId>org.apache.pulsar</groupId>\n        <artifactId>pulsar-client-admin</artifactId>\n        <version>3.2.4</version>\n    </dependency>\n  ```\n\n**Steps**\n\n**Step 1:** Initiate a Pulsar Java client in your Java project.\n\n    **Input**\n\n    ```java\n    String url = "http://localhost:8080";\n    PulsarAdmin admin = PulsarAdmin.builder()\n        .serviceHttpUrl(url)\n        .build();\n    ```\n\n**Step 2:** Create a partitioned topic _test-topic-1_ with 4 partitions.\n\n    **Input**\n\n    ```java\n    admin.topics().createPartitionedTopic("persistent://public/default/test-topic-1", 4);\n    ```\n\n**Step 3:** Update the number of the partition to 5.\n\n    **Input**\n\n    ```java\n    admin.topics().updatePartitionedTopic("test-topic-1", 5);\n    ```\n\n**Step 4:** Produce some messages to the topic _test-topic-1_.\n\n    **Input**\n\n    ```java\n    PulsarClient client = PulsarClient.builder()\n        .serviceUrl("pulsar://localhost:6650")\n        .build();\n\n    Producer<String> producer = client.newProducer(Schema.STRING)\n        .topic("test-topic-1")\n        .blockIfQueueFull(true)\n        .create();\n\n    for (int i = 0; i < 100; ++i) {\n        producer.newMessage().value("test").send();\n    }\n    producer.close();\n    client.close();\n    ```\n\n**Step 5:** Check the stats of the topic _test-topic-1_.\n\n    **Input**\n\n    ```java\n    PartitionedTopicStats stats = admin.topics().getPartitionedStats("persistent://public/default/test-topic-1",false);\n    System.out.println(stats.getMsgInCounter());\n    ```\n    \n    **Output**\n\n    ```java\n    100\n    ```\n\n**Step 6:** Delete the topic _test-topic-1_.\n\n    **Input**\n\n    ```java\n    admin.topics().deletePartitionedTopic("test-topic-1");\n    ```\n\n</TabItem>\n\n</Tabs>\n\n## Related topics\n\n- To understand basics, see [Pulsar admin API - Overview](admin-api-overview.md)\n\n- To learn usage scenarios, see [Pulsar admin API - Use cases](admin-api-use-cases.md).\n\n- To learn common administrative tasks, see [Pulsar admin API - Features](admin-api-features.md).\n\n- To perform administrative operations, see [Pulsar admin API - Tools](admin-api-tools.md).\n\n- To check the detailed usage, see the references below.\n\n  - [pulsar-admin CLI](pathname:///reference/#/3.2.x/pulsar-admin/)\n\n  - Pulsar admin APIs\n\n    - [REST API](reference-rest-api-overview.md)\n\n    - [Java admin API](https://pulsar.apache.org/api/admin/3.2.x/)\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var a=t(34164);const s={tabItem:"tabItem_Ymn6"};var i=t(74848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,r),hidden:t,children:n})}},89089:(e,n,t)=>{t.d(n,{A:()=>S});var a=t(96540),s=t(34164),i=t(23104),r=t(56347),o=t(205),l=t(57485),u=t(31682),c=t(70679);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,u.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const s=(0,r.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=d(e),[r,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[u,p]=h({queryString:t,groupId:s}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,i]=(0,c.Dv)(t);return[s,(0,a.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),b=(()=>{const e=u??f;return m({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{b&&l(b)}),[b]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),g(e)}),[p,g,i]),tabValues:i}}var g=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function P(e){let{className:n,block:t,selectedValue:a,selectValue:r,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),s=o[t].value;s!==a&&(u(n),r(s))},p=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:p,onClick:c,...i,className:(0,s.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function T(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function I(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,v.jsx)(P,{...n,...e}),(0,v.jsx)(T,{...n,...e})]})}function S(e){const n=(0,g.A)();return(0,v.jsx)(I,{...e,children:p(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(96540);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);