"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[73422],{15680:(n,e,t)=>{t.d(e,{xA:()=>s,yg:()=>d});var o=t(96540);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},i=Object.keys(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var c=o.createContext({}),l=function(n){var e=o.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},s=function(n){var e=l(n.components);return o.createElement(c.Provider,{value:e},n.children)},f="mdxType",p={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},g=o.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,c=n.parentName,s=u(n,["components","mdxType","originalType","parentName"]),f=l(t),g=r,d=f["".concat(c,".").concat(g)]||f[g]||p[g]||i;return t?o.createElement(d,a(a({ref:e},s),{},{components:t})):o.createElement(d,a({ref:e},s))}));function d(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,a=new Array(i);a[0]=g;var u={};for(var c in e)hasOwnProperty.call(e,c)&&(u[c]=e[c]);u.originalType=n,u[f]="string"==typeof n?n:r,a[1]=u;for(var l=2;l<i;l++)a[l]=t[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},91778:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>l});var o=t(58168),r=(t(96540),t(15680));const i={id:"functions-debug-localrun",title:"Debug with localrun mode",sidebar_label:"Debug with localrun mode",description:"Learn to debug functions with localrun mode in Pulsar."},a=void 0,u={unversionedId:"functions-debug-localrun",id:"version-4.0.x/functions-debug-localrun",title:"Debug with localrun mode",description:"Learn to debug functions with localrun mode in Pulsar.",source:"@site/versioned_docs/version-4.0.x/functions-debug-localrun.md",sourceDirName:".",slug:"/functions-debug-localrun",permalink:"/docs/4.0.x/functions-debug-localrun",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-4.0.x/functions-debug-localrun.md",tags:[],version:"4.0.x",frontMatter:{id:"functions-debug-localrun",title:"Debug with localrun mode",sidebar_label:"Debug with localrun mode",description:"Learn to debug functions with localrun mode in Pulsar."},sidebar:"docsSidebar",previous:{title:"Debug with unit test",permalink:"/docs/4.0.x/functions-debug-unit-test"},next:{title:"Debug with log topic",permalink:"/docs/4.0.x/functions-debug-log-topic"}},c={},l=[],s={toc:l},f="wrapper";function p(n){let{components:e,...t}=n;return(0,r.yg)(f,(0,o.A)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"In localrun mode, a function consumes and produces actual data to a Pulsar cluster, and mirrors how the function runs in a Pulsar cluster. This provides a way to test your function and allows you to launch a function instance on your local machine as a thread for easy debugging."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Debugging with localrun mode is only available for Java functions in Pulsar 2.4.0 or later versions.")),(0,r.yg)("p",null,"Before using localrun mode, you need to add the following dependency."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.apache.pulsar</groupId>\n    <artifactId>pulsar-functions-local-runner-original</artifactId>\n    <version>${pulsar.version}</version>\n</dependency>\n\n<dependency>\n    <groupId>com.google.protobuf</groupId>\n    <artifactId>protobuf-java</artifactId>\n    <version>3.21.9</version>\n</dependency>\n")),(0,r.yg)("p",null,"For example, you can run your function in the following manner."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"FunctionConfig functionConfig = new FunctionConfig();\nfunctionConfig.setName(functionName);\nfunctionConfig.setInputs(Collections.singleton(sourceTopic));\nfunctionConfig.setClassName(ExclamationFunction.class.getName());\nfunctionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\nfunctionConfig.setOutput(sinkTopic);\n\nLocalRunner localRunner = LocalRunner.builder().functionConfig(functionConfig).build();\nlocalRunner.start(true);\n")),(0,r.yg)("p",null,"You can debug functions using an IDE. Set breakpoints and manually step through a function to debug with real data."),(0,r.yg)("p",null,"The following code example shows how to run a function in localrun mode."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},'public class ExclamationFunction implements Function<String, String> {\n\n    @Override\n    public String process(String s, Context context) throws Exception {\n        return s + "!";\n    }\n\n    public static void main(String[] args) throws Exception {\n        FunctionConfig functionConfig = new FunctionConfig();\n        functionConfig.setName("exclamation");\n        functionConfig.setInputs(Collections.singleton("input"));\n        functionConfig.setClassName(ExclamationFunction.class.getName());\n        functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        functionConfig.setOutput("output");\n\n        LocalRunner localRunner = LocalRunner.builder().functionConfig(functionConfig).build();\n        localRunner.start(false);\n    }\n}\n')))}p.isMDXComponent=!0}}]);