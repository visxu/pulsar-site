"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[49514],{86838:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=t(74848),i=t(28453);const a={id:"functions-guarantees",title:"Processing guarantees",sidebar_label:"Processing guarantees",original_id:"functions-guarantees"},r=void 0,o={id:"functions-guarantees",title:"Processing guarantees",description:"Pulsar Functions provides three different messaging semantics that you can apply to any function:",source:"@site/versioned_docs/version-2.2.0/functions-guarantees.md",sourceDirName:".",slug:"/functions-guarantees",permalink:"/docs/2.2.0/functions-guarantees",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.2.0/functions-guarantees.md",tags:[],version:"2.2.0",frontMatter:{id:"functions-guarantees",title:"Processing guarantees",sidebar_label:"Processing guarantees",original_id:"functions-guarantees"},sidebar:"docsSidebar",previous:{title:"Deploying functions",permalink:"/docs/2.2.0/functions-deploying"},next:{title:"State Storage",permalink:"/docs/2.2.0/functions-state"}},c={},l=[{value:"Applying processing guarantees to a function",id:"applying-processing-guarantees-to-a-function",level:2},{value:"Updating the processing guarantees of a function",id:"updating-the-processing-guarantees-of-a-function",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Pulsar Functions provides three different messaging semantics that you can apply to any function:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Delivery semantics"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.strong,{children:"At-most-once"})," delivery"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:'Each message that is sent to the function will most likely be processed but also may not be (hence the "at most")'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.strong,{children:"At-least-once"})," delivery"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:'Each message that is sent to the function could be processed more than once (hence the "at least")'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.strong,{children:"Effectively-once"})," delivery"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Each message that is sent to the function will have one output associated with it"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"applying-processing-guarantees-to-a-function",children:"Applying processing guarantees to a function"}),"\n",(0,s.jsxs)(n.p,{children:["You can set the processing guarantees for a Pulsar Function when you create the Function. This ",(0,s.jsx)(n.a,{href:"/docs/2.2.0/reference-pulsar-admin#create-1",children:(0,s.jsx)(n.code,{children:"pulsar-function create"})})," command, for example, would apply effectively-once guarantees to the Function:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\n$ bin/pulsar-admin functions create \\\n  --processing-guarantees EFFECTIVELY_ONCE \\\n  # Other function configs\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"The available options are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ATMOST_ONCE"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ATLEAST_ONCE"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"EFFECTIVELY_ONCE"})}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["By default, Pulsar Functions provide at-most-once delivery guarantees. So if you create a function without supplying a value for the ",(0,s.jsx)(n.code,{children:"--processingGuarantees"})," flag, then the function will provide at-most-once guarantees."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"updating-the-processing-guarantees-of-a-function",children:"Updating the processing guarantees of a function"}),"\n",(0,s.jsxs)(n.p,{children:["You can change the processing guarantees applied to a function once it's already been created using the ",(0,s.jsx)(n.a,{href:"/docs/2.2.0/reference-pulsar-admin#update-1",children:(0,s.jsx)(n.code,{children:"update"})})," command. Here's an example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\n$ bin/pulsar-admin functions update \\\n  --processing-guarantees ATMOST_ONCE \\\n  # Other function configs\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(96540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);