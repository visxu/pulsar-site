"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[3231],{36448:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var i=n(74848),s=n(28453);const a={id:"client-java-3.0.4",title:"Client Java 3.0.4",sidebar_label:"Client Java 3.0.4"},l=void 0,c={id:"versioned/client-java-3.0.4",title:"Client Java 3.0.4",description:"- fix Consumer lost message ack due to race condition in acknowledge with batch message (#22353)",source:"@site/release-notes/versioned/client-java-3.0.4.md",sourceDirName:"versioned",slug:"/versioned/client-java-3.0.4",permalink:"/release-notes/versioned/client-java-3.0.4",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/release-notes/versioned/client-java-3.0.4.md",tags:[],version:"current",frontMatter:{id:"client-java-3.0.4",title:"Client Java 3.0.4",sidebar_label:"Client Java 3.0.4"}},r={},o=[];function h(e){const t={a:"a",code:"code",li:"li",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["[fix][client] Consumer lost message ack due to race condition in acknowledge with batch message (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/22353",children:"#22353"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["[fix][client] Fix wrong results of hasMessageAvailable and readNext after seeking by timestamp (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/22363",children:"#22363"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["[fix][client] GenericProtobufNativeSchema not implement getNativeSchema method. (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/22204",children:"#22204"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["[fix][client] Unclear error message when creating a consumer with two same topics (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/22255",children:"#22255"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["[fix][client] fix Reader.hasMessageAvailable might return true after seeking to latest (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/22201",children:"#22201"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["[fix][client]Fixed getting an incorrect ",(0,i.jsx)(t.code,{children:"maxMessageSize"})," value when accessing multiple clusters in the same process (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/22306",children:"#22306"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["[improve][client] Add backoff for ",(0,i.jsx)(t.code,{children:"seek"})," (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/20963",children:"#20963"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["[improve][misc] Remove the call to sun InetAddressCachePolicy (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/22329",children:"#22329"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["[fix][misc] Make ConcurrentBitSet thread safe (",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/22361",children:"#22361"}),")"]}),"\n"]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var i=n(96540);const s={},a=i.createContext(s);function l(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);