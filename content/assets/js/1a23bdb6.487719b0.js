"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[38502],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>m});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=a.createContext({}),u=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(o.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(t),g=i,m=p["".concat(o,".").concat(g)]||p[g]||c[g]||r;return t?a.createElement(m,s(s({ref:n},d),{},{components:t})):a.createElement(m,s({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=g;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[p]="string"==typeof e?e:i,s[1]=l;for(var u=2;u<r;u++)s[u]=t[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},14295:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=t(58168),i=(t(96540),t(15680));const r={id:"setup-buildtools",title:"Setting up JDKs and Maven using SDKMAN"},s=void 0,l={unversionedId:"setup-buildtools",id:"setup-buildtools",title:"Setting up JDKs and Maven using SDKMAN",description:"Setting up JDKs and Maven using SDKMAN",source:"@site/contribute/setup-buildtools.md",sourceDirName:".",slug:"/setup-buildtools",permalink:"/contribute/setup-buildtools",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/contribute/setup-buildtools.md",tags:[],version:"current",lastUpdatedBy:"Lari Hotari",lastUpdatedAt:1729542662,formattedLastUpdatedAt:"Oct 21, 2024",frontMatter:{id:"setup-buildtools",title:"Setting up JDKs and Maven using SDKMAN"},sidebar:"sidebarDevelopment",previous:{title:"Setup and building",permalink:"/contribute/setup-building"},next:{title:"Setting up an IDE",permalink:"/contribute/setup-ide"}},o={},u=[{value:"Setting up JDKs and Maven using SDKMAN",id:"setting-up-jdks-and-maven-using-sdkman",level:2},{value:"Install SDKMAN",id:"install-sdkman",level:3},{value:"Install JDK versions 21 and 17",id:"install-jdk-versions-21-and-17",level:3},{value:"Installing Amazon Corretto OpenJDK versions 21 and 17 using SDKMAN.",id:"installing-amazon-corretto-openjdk-versions-21-and-17-using-sdkman",level:4},{value:"Setting up Java version auto-switching with SDKMAN (optional)",id:"setting-up-java-version-auto-switching-with-sdkman-optional",level:4},{value:"Install Maven",id:"install-maven",level:3}],d={toc:u},p="wrapper";function c(e){let{components:n,...t}=e;return(0,i.yg)(p,(0,a.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"setting-up-jdks-and-maven-using-sdkman"},"Setting up JDKs and Maven using SDKMAN"),(0,i.yg)("h3",{id:"install-sdkman"},"Install SDKMAN"),(0,i.yg)("p",null,"See ",(0,i.yg)("a",{parentName:"p",href:"https://sdkman.io/install"},"https://sdkman.io/install")," for detailed instructions."),(0,i.yg)("h3",{id:"install-jdk-versions-21-and-17"},"Install JDK versions 21 and 17"),(0,i.yg)("p",null,"In Pulsar development, we use ",(0,i.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/corretto/"},"Amazon Corretto OpenJDK")," to build Pulsar."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"JDK 21 for Pulsar version >= 3.3",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"code will be compiled for Java 17 with Java 21"),(0,i.yg)("li",{parentName:"ul"},"Pulsar docker images are running Java 21 since 3.3.0"))),(0,i.yg)("li",{parentName:"ul"},"JDK 17 for Pulsar version >= 2.11"),(0,i.yg)("li",{parentName:"ul"},"JDK 8 or 11 for Pulsar version < 2.11")),(0,i.yg)("h4",{id:"installing-amazon-corretto-openjdk-versions-21-and-17-using-sdkman"},"Installing Amazon Corretto OpenJDK versions 21 and 17 using SDKMAN."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"# find out most recent Amazon Corretto release\nsdk l java |grep amzn\n# install\nsdk i java 21.0.4-amzn\nsdk i java 17.0.12-amzn\n# switching between versions\nsdk u java 17.0.12-amzn\nsdk u java 21.0.4-amzn\n# adding aliases\ncd ~/.sdkman/candidates/java\nln -s 17.0.12-amzn 17\nln -s 21.0.4-amzn 21\n# switching between versions using aliases\nsdk u java 17\nsdk u java 21\n")),(0,i.yg)("h4",{id:"setting-up-java-version-auto-switching-with-sdkman-optional"},"Setting up Java version auto-switching with SDKMAN (optional)"),(0,i.yg)("p",null,"With auto-switching, when there's a ",(0,i.yg)("inlineCode",{parentName:"p"},".sdkmanrc")," file in a directory, SDKMAN will switch to the defined Java version.\nThis is convenient for developers to switch between different versions of Java."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"# enable sdkman_auto_env\necho sdkman_auto_env=true >> ~/.sdkman/etc/config\n# ignore .sdkmanrc files by default\necho .sdkmanrc >> ~/.gitignore_global\n# enable the global ~/.gitignore_global file\ngit config --global core.excludesfile $HOME/.gitignore_global\n\n# now you can add .sdkmanrc files to repository directories for automatically switching the JDK version\necho java=21 > .sdkmanrc && cd $PWD\n")),(0,i.yg)("h3",{id:"install-maven"},"Install Maven"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"sdk i maven 3.9.9\n")))}c.isMDXComponent=!0}}]);