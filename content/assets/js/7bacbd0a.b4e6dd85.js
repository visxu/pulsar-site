"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[98295],{84064:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=r(74848),n=r(28453);const i={id:"reference-rest-api-overview",title:"Pulsar REST APIs",sidebar_label:"REST APIs",description:"Get a comprehensive understanding of Pulsar REST APIs."},o=void 0,a={id:"reference-rest-api-overview",title:"Pulsar REST APIs",description:"Get a comprehensive understanding of Pulsar REST APIs.",source:"@site/versioned_docs/version-4.0.x/reference-rest-api-overview.md",sourceDirName:".",slug:"/reference-rest-api-overview",permalink:"/docs/4.0.x/reference-rest-api-overview",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-4.0.x/reference-rest-api-overview.md",tags:[],version:"4.0.x",frontMatter:{id:"reference-rest-api-overview",title:"Pulsar REST APIs",sidebar_label:"REST APIs",description:"Get a comprehensive understanding of Pulsar REST APIs."},sidebar:"docsSidebar",previous:{title:"Pulsar APIs",permalink:"/docs/4.0.x/pulsar-api-overview"},next:{title:"Terminology",permalink:"/docs/4.0.x/reference-terminology"}},c={},d=[];function l(e){const s={a:"a",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"A REST API (also known as RESTful API, REpresentational State Transfer Application Programming Interface) is a set of definitions and protocols for building and integrating application software, using HTTP requests to GET, PUT, POST, and DELETE data following the REST standards. In essence, REST API is a set of remote calls using standard methods to request and return data in a specific format between two systems."}),"\n",(0,t.jsx)(s.p,{children:"Pulsar provides a variety of REST APIs that enable you to interact with Pulsar to retrieve information or perform an action."}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"REST API category"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/admin-rest-api/?version=4.0.0",children:"Admin"})}),(0,t.jsx)(s.td,{children:"REST APIs for administrative operations."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/functions-rest-api/?version=4.0.0",children:"Functions"})}),(0,t.jsx)(s.td,{children:"REST APIs for function-specific operations."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/source-rest-api/?version=4.0.0",children:"Sources"})}),(0,t.jsx)(s.td,{children:"REST APIs for source-specific operations."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/sink-rest-api/?version=4.0.0",children:"Sinks"})}),(0,t.jsx)(s.td,{children:"REST APIs for sink-specific operations."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/packages-rest-api/?version=4.0.0",children:"Packages"})}),(0,t.jsx)(s.td,{children:"REST APIs for package-specific operations. A package can be a group of functions, sources, and sinks."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/transactions-rest-api/?version=4.0.0",children:"Transactions"})}),(0,t.jsx)(s.td,{children:"REST APIs for transaction-specific operations."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/lookup-rest-api/?version=4.0.0",children:"Lookup"})}),(0,t.jsx)(s.td,{children:"REST APIs for lookup-specific operations, such as getting the owner broker of a topic, getting the namespace bundle that a topic belongs to, and so on."})]})]})]})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>a});var t=r(96540);const n={},i=t.createContext(n);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);