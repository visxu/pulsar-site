"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[41882],{71931:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>h});var i=s(74848),n=s(28453);const r={id:"client-cpp-2.10.0",title:"Client CPP 2.10.0",sidebar_label:"Client CPP 2.10.0"},a=void 0,l={id:"versioned/client-cpp-2.10.0",title:"Client CPP 2.10.0",description:"- C++] Add Wireshark cmake and fix build with latest Wireshark [#13236",source:"@site/release-notes/versioned/client-cpp-2.10.0.md",sourceDirName:"versioned",slug:"/versioned/client-cpp-2.10.0",permalink:"/release-notes/versioned/client-cpp-2.10.0",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/release-notes/versioned/client-cpp-2.10.0.md",tags:[],version:"current",frontMatter:{id:"client-cpp-2.10.0",title:"Client CPP 2.10.0",sidebar_label:"Client CPP 2.10.0"}},c={},h=[];function o(e){const t={a:"a",li:"li",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["[C++] Add Wireshark cmake and fix build with latest Wireshark ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13236",children:"#13236"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Wireshark Pulsar dissector naming replace yahoo with apache ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13251",children:"#13251"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Support arm64 optimized CRC32c hardware-instructions ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13246",children:"#13246"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Support more pulsar command names and versions in Wireshark dissector ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13286",children:"#13286"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Optimize MessageBuilder and SharedBuffer to avoid unnecessary memory copy ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13293",children:"#13293"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Fix in Apple Silicon macOS the clang-format cannot find ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13333",children:"#13333"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Add clang-format check for Pulsar Wireshark dissector ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13349",children:"#13349"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Adjust clang-format search names ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13369",children:"#13369"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Fix Wireshark dissector decode send command metadata behavior ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13471",children:"#13471"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] PIP 37: Support large message size ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/13627",children:"#13627"})]}),"\n",(0,i.jsxs)(t.li,{children:["[C++] Fix the consumer configuration inconsistency with Java client ",(0,i.jsx)(t.a,{href:"https://github.com/apache/pulsar/pull/14070",children:"#14070"})]}),"\n"]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>l});var i=s(96540);const n={},r=i.createContext(n);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);