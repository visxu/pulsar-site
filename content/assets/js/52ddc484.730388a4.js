"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[1511],{15680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>d});var t=n(96540);function s(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){s(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,s=function(e,a){if(null==e)return{};var n,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(s[n]=e[n]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=t.createContext({}),i=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=i(e.components);return t.createElement(p.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},g=t.forwardRef((function(e,a){var n=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=i(n),g=s,d=m["".concat(p,".").concat(g)]||m[g]||u[g]||r;return n?t.createElement(d,l(l({ref:a},c),{},{components:n})):t.createElement(d,l({ref:a},c))}));function d(e,a){var n=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=n.length,l=new Array(r);l[0]=g;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[m]="string"==typeof e?e:s,l[1]=o;for(var i=2;i<r;i++)l[i]=n[i];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},56836:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>i});var t=n(58168),s=(n(96540),n(15680));const r={id:"io-quickstart",title:"How to connect Pulsar to database",sidebar_label:"Get started",description:"Get started to connect Pulsar to database."},l=void 0,o={unversionedId:"io-quickstart",id:"io-quickstart",title:"How to connect Pulsar to database",description:"Get started to connect Pulsar to database.",source:"@site/docs/io-quickstart.md",sourceDirName:".",slug:"/io-quickstart",permalink:"/docs/next/io-quickstart",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/docs/io-quickstart.md",tags:[],version:"current",frontMatter:{id:"io-quickstart",title:"How to connect Pulsar to database",sidebar_label:"Get started",description:"Get started to connect Pulsar to database."},sidebar:"docsSidebar",previous:{title:"Overview",permalink:"/docs/next/io-overview"},next:{title:"Use",permalink:"/docs/next/io-use"}},p={},i=[{value:"Install Pulsar and built-in connector",id:"install-pulsar-and-built-in-connector",level:2},{value:"Start Pulsar standalone",id:"start-pulsar-standalone",level:2},{value:"Connect Pulsar to Cassandra",id:"connect-pulsar-to-cassandra",level:2},{value:"Step 1: Set up a Cassandra cluster",id:"step-1-set-up-a-cassandra-cluster",level:3},{value:"Step 2: Configure a Cassandra sink",id:"step-2-configure-a-cassandra-sink",level:3},{value:"Step 3: Create a Cassandra sink",id:"step-3-create-a-cassandra-sink",level:3},{value:"Step 4: Inspect a Cassandra sink",id:"step-4-inspect-a-cassandra-sink",level:3},{value:"Step 5: Verify a Cassandra sink",id:"step-5-verify-a-cassandra-sink",level:3},{value:"Step 6: Delete a Cassandra Sink",id:"step-6-delete-a-cassandra-sink",level:3},{value:"Connect Pulsar to PostgreSQL",id:"connect-pulsar-to-postgresql",level:2},{value:"Step 1: Set up a PostgreSQL cluster",id:"step-1-set-up-a-postgresql-cluster",level:3},{value:"Step 2: Configure a JDBC sink",id:"step-2-configure-a-jdbc-sink",level:3},{value:"Step 3: Create a JDBC sink",id:"step-3-create-a-jdbc-sink",level:3},{value:"Tip",id:"tip",level:4},{value:"Step 4: Inspect a JDBC sink",id:"step-4-inspect-a-jdbc-sink",level:3},{value:"Step 5: Stop a JDBC sink",id:"step-5-stop-a-jdbc-sink",level:3},{value:"Step 6: Restart a JDBC sink",id:"step-6-restart-a-jdbc-sink",level:3},{value:"Step 7: Update a JDBC sink",id:"step-7-update-a-jdbc-sink",level:3},{value:"Step 8: Delete a JDBC sink",id:"step-8-delete-a-jdbc-sink",level:3}],c={toc:i},m="wrapper";function u(e){let{components:a,...n}=e;return(0,s.yg)(m,(0,t.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"This tutorial provides a hands-on look at how you can move data out of Pulsar without writing a single line of code."),(0,s.yg)("p",null,"It is helpful to review the ",(0,s.yg)("a",{parentName:"p",href:"/docs/next/io-overview"},"concepts")," for Pulsar I/O by running the steps in this guide to gain a deeper understanding."),(0,s.yg)("p",null,"At the end of this tutorial, you can:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("a",{parentName:"li",href:"#connect-pulsar-to-cassandra"},"Connect Pulsar to Cassandra")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("a",{parentName:"li",href:"#connect-pulsar-to-postgresql"},"Connect Pulsar to PostgreSQL"))),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("ul",{parentName:"admonition"},(0,s.yg)("li",{parentName:"ul"},"These instructions assume you are running Pulsar in standalone mode. However, all the commands used in this tutorial can be used in a multi-node Pulsar cluster without any changes."),(0,s.yg)("li",{parentName:"ul"},"All the instructions are assumed to run at the root directory of a Pulsar binary distribution."))),(0,s.yg)("h2",{id:"install-pulsar-and-built-in-connector"},"Install Pulsar and built-in connector"),(0,s.yg)("p",null,"Before connecting Pulsar to a database, you need to install Pulsar and the desired built-in connector."),(0,s.yg)("p",null,"Read ",(0,s.yg)("a",{parentName:"p",href:"/docs/next/getting-started-standalone"},"Run a standalone Pulsar cluster locally")," for downloading the Pulsar distribution."),(0,s.yg)("p",null,"To enable Pulsar connectors, you need to download the connectors' tarball release on ",(0,s.yg)("a",{parentName:"p",href:"pathname:///download/"},"download page"),"."),(0,s.yg)("p",null,"After you download the NAR file, copy the file to the ",(0,s.yg)("inlineCode",{parentName:"p"},"connectors")," directory in the Pulsar directory. For example, if you download the ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-io-aerospike-4.0.0.nar")," connector file, enter the following commands:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"mkdir connectors\nmv pulsar-io-aerospike-4.0.0.nar connectors\n\nls connectors\n# pulsar-io-aerospike-4.0.0.nar\n# ...\n")),(0,s.yg)("admonition",{type:"note"},(0,s.yg)("ul",{parentName:"admonition"},(0,s.yg)("li",{parentName:"ul"},"If you are running Pulsar in a bare metal cluster, make sure ",(0,s.yg)("inlineCode",{parentName:"li"},"connectors")," tarball is unzipped in every pulsar directory of the broker (or in every pulsar directory of function-worker if you are running a separate worker cluster for Pulsar Functions)."),(0,s.yg)("li",{parentName:"ul"},"If you are ",(0,s.yg)("a",{parentName:"li",href:"/docs/next/getting-started-docker"},"running Pulsar in Docker")," or deploying Pulsar using a docker image (e.g. ",(0,s.yg)("a",{parentName:"li",href:"/docs/next/deploy-kubernetes"},"K8S"),"), you can use the ",(0,s.yg)("inlineCode",{parentName:"li"},"apachepulsar/pulsar-all")," image instead of the ",(0,s.yg)("inlineCode",{parentName:"li"},"apachepulsar/pulsar")," image. The ",(0,s.yg)("inlineCode",{parentName:"li"},"apachepulsar/pulsar-all")," image has already bundled all built-in connectors."))),(0,s.yg)("h2",{id:"start-pulsar-standalone"},"Start Pulsar standalone"),(0,s.yg)("ol",null,(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Start Pulsar locally."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar standalone\n")),(0,s.yg)("p",{parentName:"li"},"All the components of a Pulsar service are started in order."),(0,s.yg)("p",{parentName:"li"},"You can curl those pulsar service endpoints to make sure the Pulsar service is up and running correctly.")),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Check Pulsar binary protocol port."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"telnet localhost 6650\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Check Pulsar Function cluster."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"curl -s http://localhost:8080/admin/v2/worker/cluster\n")),(0,s.yg)("p",{parentName:"li"},(0,s.yg)("strong",{parentName:"p"},"Example output")),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'[{"workerId":"c-standalone-fw-localhost-6750","workerHostname":"localhost","port":6750}]\n'))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Make sure a public tenant and a default namespace exist."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"curl -s http://localhost:8080/admin/v2/namespaces/public\n")),(0,s.yg)("p",{parentName:"li"},(0,s.yg)("strong",{parentName:"p"},"Example output")),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'["public/default","public/functions"]\n'))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"All built-in connectors should be listed as available."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"curl -s http://localhost:8080/admin/v2/functions/connectors\n")),(0,s.yg)("p",{parentName:"li"},(0,s.yg)("strong",{parentName:"p"},"Example output")),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'[{"name":"aerospike","description":"Aerospike database sink","sinkClass":"org.apache.pulsar.io.aerospike.AerospikeStringSink"},{"name":"cassandra","description":"Writes data into Cassandra","sinkClass":"org.apache.pulsar.io.cassandra.CassandraStringSink"},{"name":"kafka","description":"Kafka source and sink connector","sourceClass":"org.apache.pulsar.io.kafka.KafkaStringSource","sinkClass":"org.apache.pulsar.io.kafka.KafkaBytesSink"},{"name":"kinesis","description":"Kinesis sink connector","sinkClass":"org.apache.pulsar.io.kinesis.KinesisSink"},{"name":"rabbitmq","description":"RabbitMQ source connector","sourceClass":"org.apache.pulsar.io.rabbitmq.RabbitMQSource"},{"name":"twitter","description":"Ingest data from Twitter firehose","sourceClass":"org.apache.pulsar.io.twitter.TwitterFireHose"}]\n')),(0,s.yg)("p",{parentName:"li"},"If an error occurs when starting the Pulsar service, you may see an exception at the terminal running ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar/standalone"),",\nor you can navigate to the ",(0,s.yg)("inlineCode",{parentName:"p"},"logs")," directory under the Pulsar directory to view the logs."))),(0,s.yg)("h2",{id:"connect-pulsar-to-cassandra"},"Connect Pulsar to Cassandra"),(0,s.yg)("p",null,"This section demonstrates how to connect Pulsar to Cassandra."),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("ul",{parentName:"admonition"},(0,s.yg)("li",{parentName:"ul"},"Make sure you have Docker installed. If you do not have one, see ",(0,s.yg)("a",{parentName:"li",href:"https://docs.docker.com/docker-for-mac/install/"},"install Docker"),". For more information about Docker commands, see ",(0,s.yg)("a",{parentName:"li",href:"https://docs.docker.com/engine/reference/commandline/run/"},"Docker CLI"),"."),(0,s.yg)("li",{parentName:"ul"},"The Cassandra sink connector reads messages from Pulsar topics and writes the messages into Cassandra tables. For more information, see ",(0,s.yg)("a",{parentName:"li",href:"/docs/next/io-cassandra-sink"},"Cassandra sink connector"),"."))),(0,s.yg)("p",null,"To connect Pulsar to Cassandra, you can follow the steps below:"),(0,s.yg)("h3",{id:"step-1-set-up-a-cassandra-cluster"},"Step 1: Set up a Cassandra cluster"),(0,s.yg)("p",null,"This example uses ",(0,s.yg)("inlineCode",{parentName:"p"},"cassandra")," Docker image to start a single-node Cassandra cluster in Docker."),(0,s.yg)("ol",null,(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Start a Cassandra cluster."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker run -d --rm --name=cassandra -p 9042:9042 cassandra:3.11\n")),(0,s.yg)("admonition",{parentName:"li",type:"note"},(0,s.yg)("p",{parentName:"admonition"},"Before moving to the next steps, make sure the Cassandra cluster is running."))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Make sure the Docker process is running."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker ps\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Check the Cassandra logs to make sure the Cassandra process is running as expected."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker logs cassandra\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Check the status of the Cassandra cluster."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker exec cassandra nodetool status\n")),(0,s.yg)("p",{parentName:"li"},(0,s.yg)("strong",{parentName:"p"},"Example output")),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre"},"Datacenter: datacenter1\n=======================\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address     Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  172.17.0.2  103.67 KiB  256          100.0%            af0e4b2f-84e0-4f0b-bb14-bd5f9070ff26  rack1\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Use ",(0,s.yg)("inlineCode",{parentName:"p"},"cqlsh")," to connect to the Cassandra cluster."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker exec -ti cassandra cqlsh localhost\n")),(0,s.yg)("p",{parentName:"li"}," ",(0,s.yg)("strong",{parentName:"p"},"Output")),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre"},"Connected to Test Cluster at localhost:9042.\n[cqlsh 5.0.1 | Cassandra 3.11.2 | CQL spec 3.4.4 | Native protocol v4]\nUse HELP for help.\ncqlsh>\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Create a keyspace ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar_test_keyspace"),"."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"cqlsh> CREATE KEYSPACE pulsar_test_keyspace WITH replication = {'class':'SimpleStrategy', 'replication_factor':1};\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Create a table ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar_test_table"),"."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"cqlsh> USE pulsar_test_keyspace;\ncqlsh:pulsar_test_keyspace> CREATE TABLE pulsar_test_table (key text PRIMARY KEY, col text);\n")))),(0,s.yg)("h3",{id:"step-2-configure-a-cassandra-sink"},"Step 2: Configure a Cassandra sink"),(0,s.yg)("p",null,"Now that we have a Cassandra cluster running locally."),(0,s.yg)("p",null,"In this section, you need to configure a Cassandra sink connector."),(0,s.yg)("p",null,"To run a Cassandra sink connector, you need to prepare a configuration file including the information that Pulsar connector runtime needs to know."),(0,s.yg)("p",null,"For example, how Pulsar connector can find the Cassandra cluster, what is the keyspace and the table that Pulsar connector uses for writing Pulsar messages to, and so on."),(0,s.yg)("p",null,"You can create a configuration file through one of the following methods."),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"JSON"),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "roots": "localhost:9042",\n    "keyspace": "pulsar_test_keyspace",\n    "columnFamily": "pulsar_test_table",\n    "keyname": "key",\n    "columnName": "col"\n}\n'))),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"YAML"),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-yaml"},'configs:\n    roots: "localhost:9042"\n    keyspace: "pulsar_test_keyspace"\n    columnFamily: "pulsar_test_table"\n    keyname: "key"\n    columnName: "col"\n')))),(0,s.yg)("p",null,"For more information, see ",(0,s.yg)("a",{parentName:"p",href:"/docs/next/io-cassandra-sink"},"Cassandra sink connector"),"."),(0,s.yg)("h3",{id:"step-3-create-a-cassandra-sink"},"Step 3: Create a Cassandra sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI")," to create a sink connector and perform other operations on them."),(0,s.yg)("p",null,"Run the following command to create a Cassandra sink connector with sink type ",(0,s.yg)("em",{parentName:"p"},"cassandra")," and the config file ",(0,s.yg)("em",{parentName:"p"},"examples/cassandra-sink.yml")," created previously."),(0,s.yg)("admonition",{type:"note"},(0,s.yg)("p",{parentName:"admonition"},"The ",(0,s.yg)("inlineCode",{parentName:"p"},"sink-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,s.yg)("inlineCode",{parentName:"p"},"name")," parameter specified in the ",(0,s.yg)("em",{parentName:"p"},"pulsar-io.yaml")," file.")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks create \\\n    --tenant public \\\n    --namespace default \\\n    --name cassandra-test-sink \\\n    --sink-type cassandra \\\n    --sink-config-file $PWD/examples/cassandra-sink.yml \\\n    --inputs test_cassandra\n")),(0,s.yg)("p",null,"Once the command is executed, Pulsar creates the sink connector ",(0,s.yg)("em",{parentName:"p"},"cassandra-test-sink"),"."),(0,s.yg)("p",null,"This sink connector runs as a Pulsar Function and writes the messages produced in the topic ",(0,s.yg)("em",{parentName:"p"},"test_cassandra")," to the Cassandra table ",(0,s.yg)("em",{parentName:"p"},"pulsar_test_table"),"."),(0,s.yg)("h3",{id:"step-4-inspect-a-cassandra-sink"},"Step 4: Inspect a Cassandra sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI")," to monitor a connector and perform other operations on it."),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"Get the information of a Cassandra sink."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks get \\\n  --tenant public \\\n  --namespace default \\\n  --name cassandra-test-sink\n")),(0,s.yg)("p",{parentName:"li"},(0,s.yg)("strong",{parentName:"p"},"Example output")),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n"tenant": "public",\n"namespace": "default",\n"name": "cassandra-test-sink",\n"className": "org.apache.pulsar.io.cassandra.CassandraStringSink",\n"inputSpecs": {\n  "test_cassandra": {\n    "isRegexPattern": false\n  }\n},\n"configs": {\n  "roots": "localhost:9042",\n  "keyspace": "pulsar_test_keyspace",\n  "columnFamily": "pulsar_test_table",\n  "keyname": "key",\n  "columnName": "col"\n},\n"parallelism": 1,\n"processingGuarantees": "ATLEAST_ONCE",\n"retainOrdering": false,\n"autoAck": true,\n"archive": "builtin://cassandra"\n}\n'))),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"Check the status of a Cassandra sink."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks status \\\n  --tenant public \\\n  --namespace default \\\n  --name cassandra-test-sink\n")),(0,s.yg)("p",{parentName:"li"},(0,s.yg)("strong",{parentName:"p"},"Example output")),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n"numInstances" : 1,\n"numRunning" : 1,\n"instances" : [ {\n  "instanceId" : 0,\n  "status" : {\n    "running" : true,\n    "error" : "",\n    "numRestarts" : 0,\n    "numReadFromPulsar" : 0,\n    "numSystemExceptions" : 0,\n    "latestSystemExceptions" : [ ],\n    "numSinkExceptions" : 0,\n    "latestSinkExceptions" : [ ],\n    "numWrittenToSink" : 0,\n    "lastReceivedTime" : 0,\n    "workerId" : "c-standalone-fw-localhost-8080"\n  }\n} ]\n}\n')))),(0,s.yg)("h3",{id:"step-5-verify-a-cassandra-sink"},"Step 5: Verify a Cassandra sink"),(0,s.yg)("ol",null,(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Produce some messages to the input topic of the Cassandra sink ",(0,s.yg)("em",{parentName:"p"},"test_cassandra"),"."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},'for i in {0..9}; do bin/pulsar-client produce -m "key-$i" -n 1 test_cassandra; done\n'))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Inspect the status of the Cassandra sink ",(0,s.yg)("em",{parentName:"p"},"test_cassandra"),"."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks status \\\n    --tenant public \\\n    --namespace default \\\n    --name cassandra-test-sink\n")),(0,s.yg)("p",{parentName:"li"},"You can see 10 messages are processed by the Cassandra sink ",(0,s.yg)("em",{parentName:"p"},"test_cassandra"),"."),(0,s.yg)("p",{parentName:"li"},(0,s.yg)("strong",{parentName:"p"},"Example output")),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "numInstances" : 1,\n  "numRunning" : 1,\n  "instances" : [ {\n    "instanceId" : 0,\n    "status" : {\n      "running" : true,\n      "error" : "",\n      "numRestarts" : 0,\n      "numReadFromPulsar" : 10,\n      "numSystemExceptions" : 0,\n      "latestSystemExceptions" : [ ],\n      "numSinkExceptions" : 0,\n      "latestSinkExceptions" : [ ],\n      "numWrittenToSink" : 10,\n      "lastReceivedTime" : 1551685489136,\n      "workerId" : "c-standalone-fw-localhost-8080"\n    }\n  } ]\n}\n'))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Use ",(0,s.yg)("inlineCode",{parentName:"p"},"cqlsh")," to connect to the Cassandra cluster."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker exec -ti cassandra cqlsh localhost\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Check the data of the Cassandra table ",(0,s.yg)("em",{parentName:"p"},"pulsar_test_table"),"."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"cqlsh> use pulsar_test_keyspace;\ncqlsh:pulsar_test_keyspace> select * from pulsar_test_table;\n\nkey    | col\n--------+--------\n key-5 |  key-5\n key-0 |  key-0\n key-9 |  key-9\n key-2 |  key-2\n key-1 |  key-1\n key-3 |  key-3\n key-6 |  key-6\n key-7 |  key-7\n key-4 |  key-4\n key-8 |  key-8\n")))),(0,s.yg)("h3",{id:"step-6-delete-a-cassandra-sink"},"Step 6: Delete a Cassandra Sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI"),"\nto delete a connector and perform other operations on it."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks delete \\\n    --tenant public \\\n    --namespace default \\\n    --name cassandra-test-sink\n")),(0,s.yg)("h2",{id:"connect-pulsar-to-postgresql"},"Connect Pulsar to PostgreSQL"),(0,s.yg)("p",null,"This section demonstrates how to connect Pulsar to PostgreSQL."),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("ul",{parentName:"admonition"},(0,s.yg)("li",{parentName:"ul"},"Make sure you have Docker installed. If you do not have one, see ",(0,s.yg)("a",{parentName:"li",href:"https://docs.docker.com/docker-for-mac/install/"},"install Docker"),". For more information about Docker commands, see ",(0,s.yg)("a",{parentName:"li",href:"https://docs.docker.com/engine/reference/commandline/run/"},"Docker CLI"),"."),(0,s.yg)("li",{parentName:"ul"},"The JDBC sink connector pulls messages from Pulsar topics and persists the messages to ClickHouse, MariaDB, PostgreSQL, or SQLite. For more information, see ",(0,s.yg)("a",{parentName:"li",href:"/docs/next/io-jdbc-sink"},"JDBC sink connector"),"."))),(0,s.yg)("p",null,"To connect Pulsar to PostgreSQL, you can follow the steps below:"),(0,s.yg)("h3",{id:"step-1-set-up-a-postgresql-cluster"},"Step 1: Set up a PostgreSQL cluster"),(0,s.yg)("p",null,"This example uses the PostgreSQL 12 docker image to start a single-node PostgreSQL cluster in Docker."),(0,s.yg)("ol",null,(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Pull the PostgreSQL 12 image from Docker."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker pull postgres:12\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Start PostgreSQL."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker run -d -it --rm \\\n    --name pulsar-postgres \\\n    -p 5432:5432 \\\n    -e POSTGRES_PASSWORD=password \\\n    -e POSTGRES_USER=postgres \\\n    postgres:12\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Check if PostgreSQL has been started successfully."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker logs -f pulsar-postgres\n")),(0,s.yg)("p",{parentName:"li"},"PostgreSQL has been started successfully if the following message appears."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-text"},'2020-05-11 20:09:24.492 UTC [1] LOG:  starting PostgreSQL 12.2 (Debian 12.2-2.pgdg100+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 8.3.0-6) 8.3.0, 64-bit\n2020-05-11 20:09:24.492 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432\n2020-05-11 20:09:24.492 UTC [1] LOG:  listening on IPv6 address "::", port 5432\n2020-05-11 20:09:24.499 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"\n2020-05-11 20:09:24.523 UTC [55] LOG:  database system was shut down at 2020-05-11 20:09:24 UTC\n2020-05-11 20:09:24.533 UTC [1] LOG:  database system is ready to accept connections\n'))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Access to PostgreSQL container."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"docker exec -it pulsar-postgres /bin/bash\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Log in to PostgreSQL with the default username and password:"),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"psql -U postgres postgres\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Create a ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar_postgres_jdbc_sink")," table using the following command:"),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"create table if not exists pulsar_postgres_jdbc_sink\n(\nid serial PRIMARY KEY,\nname VARCHAR(255) NOT NULL\n);\n")))),(0,s.yg)("h3",{id:"step-2-configure-a-jdbc-sink"},"Step 2: Configure a JDBC sink"),(0,s.yg)("p",null,"Now we have a PostgreSQL running locally."),(0,s.yg)("p",null,"In this section, you need to configure a JDBC sink connector."),(0,s.yg)("ol",null,(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Add a configuration file."),(0,s.yg)("p",{parentName:"li"},"To run a JDBC sink connector, you need to prepare a YAML configuration file including the information that the Pulsar connector runtime needs to know."),(0,s.yg)("p",{parentName:"li"},"For example, how Pulsar connector can find the PostgreSQL cluster, what is the JDBC URL and the table that Pulsar connector uses for writing messages."),(0,s.yg)("p",{parentName:"li"},"Create a ",(0,s.yg)("em",{parentName:"p"},"pulsar-postgres-jdbc-sink.yaml")," file, copy the following contents to this file, and place the file in the ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar/connectors")," folder."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-yaml"},'configs:\n  userName: "postgres"\n  password: "password"\n  jdbcUrl: "jdbc:postgresql://localhost:5432/postgres"\n  tableName: "pulsar_postgres_jdbc_sink"\n'))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Create a schema."),(0,s.yg)("p",{parentName:"li"},"Create a ",(0,s.yg)("em",{parentName:"p"},"avro-schema")," file, copy the following contents to this file, and place the file in the ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar/connectors")," folder."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "AVRO",\n  "schema": "{\\"type\\":\\"record\\",\\"name\\":\\"Test\\",\\"fields\\":[{\\"name\\":\\"id\\",\\"type\\":[\\"null\\",\\"int\\"]},{\\"name\\":\\"name\\",\\"type\\":[\\"null\\",\\"string\\"]}]}",\n  "properties": {}\n}\n')),(0,s.yg)("admonition",{parentName:"li",type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about AVRO, see ",(0,s.yg)("a",{parentName:"p",href:"https://avro.apache.org/docs/1.9.1/"},"Apache Avro"),"."))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Upload a schema to a topic."),(0,s.yg)("p",{parentName:"li"},"This example uploads the ",(0,s.yg)("em",{parentName:"p"},"avro-schema")," schema to the ",(0,s.yg)("em",{parentName:"p"},"pulsar-postgres-jdbc-sink-topic")," topic."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin schemas upload pulsar-postgres-jdbc-sink-topic -f ./connectors/avro-schema\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Check if the schema has been uploaded successfully."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin schemas get pulsar-postgres-jdbc-sink-topic\n")),(0,s.yg)("p",{parentName:"li"},"The schema has been uploaded successfully if the following message appears."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{"name":"pulsar-postgres-jdbc-sink-topic","schema":"{\\"type\\":\\"record\\",\\"name\\":\\"Test\\",\\"fields\\":[{\\"name\\":\\"id\\",\\"type\\":[\\"null\\",\\"int\\"]},{\\"name\\":\\"name\\",\\"type\\":[\\"null\\",\\"string\\"]}]}","type":"AVRO","properties":{}}\n')))),(0,s.yg)("h3",{id:"step-3-create-a-jdbc-sink"},"Step 3: Create a JDBC sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI"),"\nto create a sink connector and perform other operations on it."),(0,s.yg)("p",null,"This example creates a sink connector and specifies the desired information."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks create \\\n    --archive $PWD/connectors/pulsar-io-jdbc-postgres-4.0.0.nar \\\n    --inputs pulsar-postgres-jdbc-sink-topic \\\n    --name pulsar-postgres-jdbc-sink \\\n    --sink-config-file $PWD/connectors/pulsar-postgres-jdbc-sink.yaml \\\n    --parallelism 1\n")),(0,s.yg)("p",null,"Once the command is executed, Pulsar creates a sink connector ",(0,s.yg)("em",{parentName:"p"},"pulsar-postgres-jdbc-sink"),"."),(0,s.yg)("p",null,"This sink connector runs as a Pulsar Function and writes the messages produced in the topic ",(0,s.yg)("em",{parentName:"p"},"pulsar-postgres-jdbc-sink-topic")," to the PostgreSQL table ",(0,s.yg)("em",{parentName:"p"},"pulsar_postgres_jdbc_sink"),"."),(0,s.yg)("h4",{id:"tip"},"Tip"),(0,s.yg)("table",null,(0,s.yg)("thead",{parentName:"table"},(0,s.yg)("tr",{parentName:"thead"},(0,s.yg)("th",{parentName:"tr",align:null},"Flag"),(0,s.yg)("th",{parentName:"tr",align:null},"Description"),(0,s.yg)("th",{parentName:"tr",align:null},"Example"))),(0,s.yg)("tbody",{parentName:"table"},(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},(0,s.yg)("inlineCode",{parentName:"td"},"--archive")),(0,s.yg)("td",{parentName:"tr",align:null},"The absolute path to the archive file for the sink."),(0,s.yg)("td",{parentName:"tr",align:null},"$PWD/pulsar-io-jdbc-postgres-4.0.0.nar")),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},(0,s.yg)("inlineCode",{parentName:"td"},"--inputs")),(0,s.yg)("td",{parentName:"tr",align:null},"The input topic(s) of the sink. ",(0,s.yg)("br",null),(0,s.yg)("br",null)," Multiple topics can be specified as a comma-separated list."),(0,s.yg)("td",{parentName:"tr",align:null})),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},(0,s.yg)("inlineCode",{parentName:"td"},"--name")),(0,s.yg)("td",{parentName:"tr",align:null},"The name of the sink."),(0,s.yg)("td",{parentName:"tr",align:null},"pulsar-postgres-jdbc-sink")),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},(0,s.yg)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,s.yg)("td",{parentName:"tr",align:null},"The absolute path to a YAML config file specifying the configuration of the sink."),(0,s.yg)("td",{parentName:"tr",align:null},"$PWD/pulsar-postgres-jdbc-sink.yaml")),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},(0,s.yg)("inlineCode",{parentName:"td"},"--parallelism")),(0,s.yg)("td",{parentName:"tr",align:null},"The parallelism factor of the sink. ",(0,s.yg)("br",null),(0,s.yg)("br",null)," For example, the number of sink instances to run."),(0,s.yg)("td",{parentName:"tr",align:null},"1")))),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-admin sinks create options"),", see ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),".")),(0,s.yg)("p",null,"The sink has been created successfully if the following message appears."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"Created successfully\n")),(0,s.yg)("h3",{id:"step-4-inspect-a-jdbc-sink"},"Step 4: Inspect a JDBC sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI"),"\nto monitor a connector and perform other operations on it."),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"List all running JDBC sink(s)."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks list \\\n    --tenant public \\\n    --namespace default\n")),(0,s.yg)("admonition",{parentName:"li",type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-admin sinks list options"),", see ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),".")),(0,s.yg)("p",{parentName:"li"},"The result shows that only the ",(0,s.yg)("em",{parentName:"p"},"postgres-jdbc-sink")," sink is running."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'[\n"pulsar-postgres-jdbc-sink"\n]\n'))),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"Get the information of a JDBC sink."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks get \\\n  --tenant public \\\n  --namespace default \\\n  --name pulsar-postgres-jdbc-sink\n")),(0,s.yg)("admonition",{parentName:"li",type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-admin sinks get options"),", see ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),".")),(0,s.yg)("p",{parentName:"li"},"The result shows the information of the sink connector, including tenant, namespace, topic and so on."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n"tenant": "public",\n"namespace": "default",\n"name": "pulsar-postgres-jdbc-sink",\n"className": "org.apache.pulsar.io.jdbc.PostgresJdbcAutoSchemaSink",\n"inputSpecs": {\n  "pulsar-postgres-jdbc-sink-topic": {\n    "isRegexPattern": false\n  }\n},\n"configs": {\n  "password": "password",\n  "jdbcUrl": "jdbc:postgresql://localhost:5432/pulsar_postgres_jdbc_sink",\n  "userName": "postgres",\n  "tableName": "pulsar_postgres_jdbc_sink"\n},\n"parallelism": 1,\n"processingGuarantees": "ATLEAST_ONCE",\n"retainOrdering": false,\n"autoAck": true\n}\n'))),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"Get the status of a JDBC sink"),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks status \\\n  --tenant public \\\n  --namespace default \\\n  --name pulsar-postgres-jdbc-sink\n")),(0,s.yg)("admonition",{parentName:"li",type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-admin sinks status options"),", see ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),".")),(0,s.yg)("p",{parentName:"li"},"The result shows the current status of the sink connector, including the number of instances, running status, worker ID and so on."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n"numInstances" : 1,\n"numRunning" : 1,\n"instances" : [ {\n  "instanceId" : 0,\n  "status" : {\n    "running" : true,\n    "error" : "",\n    "numRestarts" : 0,\n    "numReadFromPulsar" : 0,\n    "numSystemExceptions" : 0,\n    "latestSystemExceptions" : [ ],\n    "numSinkExceptions" : 0,\n    "latestSinkExceptions" : [ ],\n    "numWrittenToSink" : 0,\n    "lastReceivedTime" : 0,\n    "workerId" : "c-standalone-fw-192.168.2.52-8080"\n  }\n} ]\n}\n')))),(0,s.yg)("h3",{id:"step-5-stop-a-jdbc-sink"},"Step 5: Stop a JDBC sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI")," to stop a connector and perform other operations on it."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks stop \\\n    --tenant public \\\n    --namespace default \\\n    --name pulsar-postgres-jdbc-sink\n")),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-admin sinks stop options"),", see ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),".")),(0,s.yg)("p",null,"The sink instance has been stopped successfully if the following message disappears."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"Stopped successfully\n")),(0,s.yg)("h3",{id:"step-6-restart-a-jdbc-sink"},"Step 6: Restart a JDBC sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI")," to restart a connector and perform other operations on it."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks restart \\\n    --tenant public \\\n    --namespace default \\\n    --name pulsar-postgres-jdbc-sink\n")),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-admin sinks restart options"),", see ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),".")),(0,s.yg)("p",null,"The sink instance has been started successfully if the following message disappears."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"Started successfully\n")),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("ul",{parentName:"admonition"},(0,s.yg)("li",{parentName:"ul"},"Optionally, you can run a standalone sink connector using ",(0,s.yg)("inlineCode",{parentName:"li"},"pulsar-admin sinks localrun options"),".\nNote that ",(0,s.yg)("inlineCode",{parentName:"li"},"pulsar-admin sinks localrun options")," ",(0,s.yg)("strong",{parentName:"li"},"runs a sink connector locally"),", while ",(0,s.yg)("inlineCode",{parentName:"li"},"pulsar-admin sinks start options")," ",(0,s.yg)("strong",{parentName:"li"},"starts a sink connector in a cluster"),"."),(0,s.yg)("li",{parentName:"ul"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"li"},"pulsar-admin sinks localrun options"),", see ",(0,s.yg)("a",{parentName:"li",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),"."))),(0,s.yg)("h3",{id:"step-7-update-a-jdbc-sink"},"Step 7: Update a JDBC sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI")," to update a connector and perform other operations on it."),(0,s.yg)("p",null,"This example updates the parallelism of the ",(0,s.yg)("em",{parentName:"p"},"pulsar-postgres-jdbc-sink")," sink connector to 2."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks update \\\n    --name pulsar-postgres-jdbc-sink \\\n    --parallelism 2\n")),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-admin sinks update options"),", see ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),".")),(0,s.yg)("p",null,"The sink connector has been updated successfully if the following message disappears."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"Updated successfully\n")),(0,s.yg)("p",null,"This example double-checks the information."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks get \\\n    --tenant public \\\n    --namespace default \\\n    --name pulsar-postgres-jdbc-sink\n")),(0,s.yg)("p",null,"The result shows that the parallelism is 2."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "tenant": "public",\n  "namespace": "default",\n  "name": "pulsar-postgres-jdbc-sink",\n  "className": "org.apache.pulsar.io.jdbc.PostgresJdbcAutoSchemaSink",\n  "inputSpecs": {\n    "pulsar-postgres-jdbc-sink-topic": {\n      "isRegexPattern": false\n    }\n  },\n  "configs": {\n    "password": "password",\n    "jdbcUrl": "jdbc:postgresql://localhost:5432/pulsar_postgres_jdbc_sink",\n    "userName": "postgres",\n    "tableName": "pulsar_postgres_jdbc_sink"\n  },\n  "parallelism": 2,\n  "processingGuarantees": "ATLEAST_ONCE",\n  "retainOrdering": false,\n  "autoAck": true\n}\n')),(0,s.yg)("h3",{id:"step-8-delete-a-jdbc-sink"},"Step 8: Delete a JDBC sink"),(0,s.yg)("p",null,"You can use the ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Connector Admin CLI"),"\nto delete a connector and perform other operations on it."),(0,s.yg)("p",null,"This example deletes the ",(0,s.yg)("em",{parentName:"p"},"pulsar-postgres-jdbc-sink")," sink connector."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks delete \\\n    --tenant public \\\n    --namespace default \\\n    --name pulsar-postgres-jdbc-sink\n")),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"For more information about ",(0,s.yg)("inlineCode",{parentName:"p"},"pulsar-admin sinks delete options"),", see ",(0,s.yg)("a",{parentName:"p",href:"pathname:///reference/#/next/pulsar-admin/"},"Pulsar admin docs"),".")),(0,s.yg)("p",null,"The sink connector has been deleted successfully if the following message appears."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-text"},"Deleted successfully\n")),(0,s.yg)("p",null,"This example double-checks the status of the sink connector."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"bin/pulsar-admin sinks get \\\n    --tenant public \\\n    --namespace default \\\n    --name pulsar-postgres-jdbc-sink\n")),(0,s.yg)("p",null,"The result shows that the sink connector does not exist."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-text"},"HTTP 404 Not Found\nReason: Sink pulsar-postgres-jdbc-sink doesn't exist\n")))}u.isMDXComponent=!0}}]);